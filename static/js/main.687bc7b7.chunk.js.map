{"version":3,"sources":["hooks/useForm.js","redux-modules/utils/createSliceWithRoutines.js","redux-modules/habits/habitsSlice.js","redux-modules/habits/hooks/useCreateHabit.js","redux-modules/session/selectors/sessionSliceSelector.js","redux-modules/session/selectors/isLoggedInSelector.js","hooks/useLoggedIn.js","ui/molecules/dialogs/CreateHabitDialog.tsx","hooks/useToggle.js","redux-modules/session/sessionSlice.js","redux-modules/session/hooks/useLogout.js","ui/atoms/themeProvider/ThemeProvider.js","ui/atoms/navigation/NavBar.js","redux-modules/session/hooks/useLogin.js","ui/pages/session/SignIn.tsx","redux-modules/session/hooks/useCreateUser.js","ui/pages/session/SignUp.tsx","ui/pages/ProfilePage.tsx","hooks/useAuthPersistence.js","ui/atoms/route/AuthRoute.js","ui/atoms/route/UnAuthRoute.js","redux-modules/habits/selectors/habitIdsSelectors.js","redux-modules/habits/hooks/useHabitIds.js","ui/molecules/calendar/calculateWeeksInMonth.js","ui/molecules/calendar/Week.js","redux-modules/habits/selectors/habitsSliceSelector.js","redux-modules/habits/selectors/habitSelector.js","redux-modules/habits/hooks/useHabit.js","ui/molecules/calendar/Calendar.js","ui/molecules/calendar/MonthNav.js","redux-modules/habits/hooks/useDeleteHabit.js","redux-modules/habits/hooks/useUpdateHabit.js","ui/molecules/dialogs/RenameHabitDialog.tsx","ui/molecules/dialogs/DeleteHabitDialog.tsx","ui/molecules/habit/HabitOptions.tsx","redux-modules/habits/hooks/useSwapHabit.js","ui/molecules/habit/HabitDropZone.tsx","ui/molecules/habit/HabitNotes.tsx","ui/molecules/habit/Habit.tsx","ui/molecules/habits/Habits.tsx","ui/pages/LandingPage.tsx","App.tsx","firebase/firebase.js","firebase/users/loginUser.js","redux-modules/session/sagas/loginSaga.js","firebase/users/createUser.js","redux-modules/session/sagas/createUserSaga.js","firebase/users/logoutUser.js","redux-modules/session/sagas/logoutSaga.js","redux-modules/session/selectors/currentUserIdSelector.js","redux-modules/session/sagas/subcribeToUserSettingsSaga.js","redux-modules/session/sagas/sessionSagas.js","firebase/habits/createHabit.js","redux-modules/habits/sagas/createHabitSaga.js","firebase/habits/updateHabit.js","redux-modules/habits/sagas/updateHabitSaga.js","firebase/habits/updateHistory.js","redux-modules/habits/sagas/updateHistorySaga.js","redux-modules/habits/sagas/subcribeToHabitsSaga.js","firebase/habits/deleteHabit.js","redux-modules/habits/sagas/deleteHabitSaga.js","firebase/habits/swapHabitOrder.ts","redux-modules/habits/sagas/swapHabitOrderSaga.js","redux-modules/habits/sagas/habitSagas.js","redux-modules/rootSaga.js","redux-modules/store.js","serviceWorkerRegistration.ts","index.tsx"],"names":["SET","RESET","formReducer","state","action","type","field","payload","useForm","initialState","useReducer","dispatch","updateField","target","name","value","resetForm","formState","createSliceWithRoutines","reducers","routines","routineInfo","routineReducers","noop","extraReducers","otherArgs","Error","routineNames","Object","keys","reduce","createdRoutines","routineName","createRoutine","promisifiedRoutines","promisifiedRoutinesAcc","routine","promisifyRoutine","slice","createSlice","habitsSlice","updateHabit","habit","id","addHabit","deleteHabit","updateHistory","createHabit","fetchHabit","swapHabit","SUCCESS","useCreateHabit","useDispatch","useCallback","habitName","trigger","sessionSliceSelector","session","isLoggedInSelector","createSelector","sessionSlice","Boolean","user","uid","useLoggedIn","useSelector","FormDialog","useState","open","setOpen","isLoggedIn","handleClickOpen","handleClose","Button","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","onChange","label","fullWidth","autoComplete","DialogActions","e","useToggle","defaultValue","toggle","setToggle","toggleValue","userSettings","habitIds","setCurrentUser","setUserSettings","login","logout","createUser","useLogout","ThemeProvider","children","theme","React","useMemo","createMuiTheme","palette","calendarStyles","css","getDate","Date","now","padStart","linkStyles","NavBar","props","toggleState","openMenuRef","useRef","AppBar","color","position","Toolbar","style","display","flexDirection","justifyContent","alignItems","Typography","variant","noWrap","textDecoration","to","flexGrow","maxWidth","className","fontSize","IconButton","edge","aria-label","ref","aria-haspopup","Popper","anchorEl","current","transition","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","component","MuiLink","process","useLogin","loginInfo","formStyles","SignIn","onSubmit","event","preventDefault","stopPropagation","cx","email","placeholder","required","password","useCreateUser","userInfo","displayName","SignUp","ProfilePage","useAuthPersistence","useEffect","firebase","auth","onAuthStateChanged","userAuth","actions","AuthRoute","path","UnAuthRoute","habitIdsSelector","get","useHabitIds","calculateWeeksInMonth","month","year","numDaysInMonth","getDaysInMonth","firstDayOfMonth","getDay","weeks","currentDay","week","length","i","push","dayContainerStyles","clickableStyles","dayStyles","darkThemeStyles","darkActiveStyles","Week","onDayClick","history","map","day","idx","habitsSliceSelector","habits","habitSelector","habitId","useHabit","Calendar","monthNavContainerStyles","navStyles","Months","MonthNav","currentMonth","getMonth","currentYear","getYear","setMonth","setYear","notesOpen","setNotesOpen","navigateBackwards","newMonth","navigateForwards","size","useDeleteHabit","useUpdateHabit","RenameHabitDialog","isOpen","setIsRenameOpen","DeleteHabitDialog","closeDialog","HabitOptions","iconButtonRef","setIsOpen","closeOptions","renameOpen","deleteOpen","setIsDeleteOpen","Menu","keepMounted","useSwapHabit","firstHabitId","secondHabitId","hoveringStyles","canDropStyles","HabitDropZone","useDrop","accept","canDrop","item","drop","monitor","droppedItemId","collect","isHovering","isOver","dropCollectedProps","buttonContainerStyles","preStyles","textAreaStyles","HabitNotes","notes","updateNotes","editNotes","setEditNotes","TextareaAutosize","cardStyles","fillerStyles","cardHeaderStyles","titleStyles","Habit","order","useDrag","drag","preview","Card","habitContainerStyles","Habits","flipKey","join","flipId","LandingPage","appStyles","App","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","a","signInWithEmailAndPassword","loginUser","loginSaga","put","request","call","success","console","error","failure","fulfill","generateUserDocument","userRef","doc","exists","newUserInfo","set","createUserWithEmailAndPassword","updateProfile","createUserSaga","logoutUser","signOut","logoutSaga","currentUserIdSelector","undefined","listen","handleSubscribe","subscribeToUserSettingsSaga","subscriptionChannel","userId","eventChannel","emitter","onSnapshot","querySnapshot","data","select","currentUserId","channel","take","cancelled","close","fork","listenTask","cancel","takeLatest","sessionSagas","takeEvery","TRIGGER","options","userSettingsRef","collection","habitRef","runTransaction","transaction","userSettingsDoc","archived","update","createHabitSaga","newHabit","newData","merge","updateHabitSaga","updatedHabitProperties","newValue","updateHistorySaga","currentValue","subscribeToHabitsSaga","where","docChanges","forEach","change","delete","newHabitIds","filter","deleteHabitSaga","includes","firstHabitIdx","indexOf","secondHabitIdx","swapHabitOrder","swapHabitOrderSaga","habitSagas","rootSaga","sagas","sessionsSaga","routinePromiseWatcherSaga","all","saga","spawn","allSagas","createStore","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","store","configureStore","reducer","router","connectRouter","preloadedState","run","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","createHashHistory","document","addEventListener","ReactDOM","render","StrictMode","HTML5toTouch","CssBaseline","getElementById","URL","href","origin","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.687bc7b7.chunk.js","sourcesContent":["import { useReducer } from 'react';\n\nconst SET = 'SET';\nconst RESET = 'RESET';\n\nconst formReducer = (state, action) => {\n  if (action.type === SET) {\n    return { ...state, [action.field]: action.payload };\n  }\n  if (action.type === RESET) {\n    return {};\n  }\n};\n\nfunction useForm(initialState = {}) {\n  const [state, dispatch] = useReducer(formReducer, initialState);\n\n  const updateField = ({ target }) =>\n    dispatch({\n      type: SET,\n      field: target.name,\n      payload: target.value,\n    });\n  const resetForm = () =>\n    dispatch({\n      type: RESET,\n    });\n  return { formState: state, updateField, resetForm };\n}\n\nexport default useForm;\n","import noop from 'lodash/noop';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { createRoutine, promisifyRoutine } from 'redux-saga-routines';\n\nfunction createSliceWithRoutines({\n  name,\n  initialState = {},\n  reducers = {},\n  routines: routineInfo = {},\n  routineReducers = noop,\n  extraReducers = {},\n  ...otherArgs\n}) {\n  if (typeof routineReducers !== 'function') {\n    throw new Error('routineReducers must be a function that returns a reducerMap');\n  }\n  const routineNames = Object.keys(routineInfo);\n\n  const routines = routineNames.reduce((createdRoutines, routineName) => {\n    createdRoutines[routineName] = createRoutine(`${name}/${routineInfo[routineName]}`);\n    return createdRoutines;\n  }, {});\n\n  const promisifiedRoutines = routineNames.reduce((promisifiedRoutinesAcc, routineName) => {\n    const routine = routines[routineName];\n    promisifiedRoutinesAcc[routineName] = promisifyRoutine(routine);\n    return promisifiedRoutinesAcc;\n  }, {});\n  const slice = createSlice({\n    name,\n    reducers,\n    initialState,\n    extraReducers: {\n      ...extraReducers,\n      ...routineReducers(routines),\n    },\n    ...otherArgs,\n  });\n  slice.routines = routines;\n  slice.promisifiedRoutines = promisifiedRoutines;\n  return slice;\n}\nexport default createSliceWithRoutines;\n","import createSliceWithRoutines from 'redux-modules/utils/createSliceWithRoutines';\n\nconst habitsSlice = createSliceWithRoutines({\n  name: 'habits',\n  initialState: {},\n  reducers: {\n    updateHabit: (state, action) => {\n      const { habit, id } = action.payload;\n      state[id] = { ...state[id], ...habit };\n    },\n    addHabit: (state, action) => {\n      const { habit, id } = action.payload;\n      state[id] = habit;\n    },\n    deleteHabit: (state, action) => {\n      const { id } = action.payload;\n      delete state[id];\n    },\n  },\n  routines: {\n    updateHistory: 'UPDATE_HISTORY',\n    createHabit: 'CREATE_HABIT',\n    updateHabit: 'UPDATE_HABIT',\n    deleteHabit: 'DELETE_HABIT',\n    fetchHabit: 'FETCH_HABIT',\n    swapHabit: 'SWAP_HABIT',\n  },\n  routineReducers: (routines) => ({\n    [routines.createHabit.SUCCESS]: (state, action) => {\n      const { habit, id } = action.payload;\n\n      state[id] = habit;\n    },\n  }),\n});\n\nexport default habitsSlice;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useCreateHabit() {\n  const dispatch = useDispatch();\n\n  const createUser = useCallback(\n    (formState) => {\n      const { habitName } = formState;\n      dispatch(routines.createHabit.trigger({ habitName }));\n    },\n    [dispatch]\n  );\n\n  return createUser;\n}\n\nexport default useCreateHabit;\n","const sessionSliceSelector = (state) => state.session;\n\nexport default sessionSliceSelector;\n","import { createSelector } from '@reduxjs/toolkit';\nimport sessionSliceSelector from './sessionSliceSelector';\n\nconst isLoggedInSelector = createSelector(sessionSliceSelector, (sessionSlice) =>\n  Boolean(sessionSlice.user.uid)\n);\n\nexport default isLoggedInSelector;\n","import { useSelector } from 'react-redux';\nimport isLoggedInSelector from 'redux-modules/session/selectors/isLoggedInSelector';\n\nconst useLoggedIn = () => {\n  const isLoggedIn = useSelector(isLoggedInSelector);\n\n  return isLoggedIn;\n};\n\nexport default useLoggedIn;\n","import React, { useState, useCallback } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useForm from 'hooks/useForm';\nimport useCreateHabit from 'redux-modules/habits/hooks/useCreateHabit';\nimport useLoggedIn from 'hooks/useLoggedIn';\n\nexport default function FormDialog() {\n  const [open, setOpen] = useState(false);\n  const { formState, updateField, resetForm } = useForm();\n  const createHabit = useCreateHabit();\n  const isLoggedIn = useLoggedIn();\n\n  const handleClickOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  if (!isLoggedIn) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Create Habit</Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"create-habit-title\">\n        <DialogTitle id=\"create-habit-title\">Create Habit</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"habitName\"\n            name=\"habitName\"\n            value={formState.habitName || ''}\n            onChange={updateField}\n            label=\"Habit Name\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button\n            onClick={(e) => {\n              createHabit(formState);\n              resetForm();\n              handleClose();\n            }}\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useCallback, useState } from 'react';\n\nfunction useToggle(defaultValue = false) {\n  const [toggle, setToggle] = useState(defaultValue);\n\n  const toggleValue = useCallback(() => {\n    setToggle(!toggle);\n  }, [toggle]);\n\n  return [toggle, toggleValue, setToggle];\n}\n\nexport default useToggle;\n","import createSliceWithRoutines from 'redux-modules/utils/createSliceWithRoutines';\n\nconst sessionSlice = createSliceWithRoutines({\n  name: 'session',\n  initialState: {\n    user: {},\n    userSettings: {\n      habitIds: [],\n    },\n  },\n  reducers: {\n    setCurrentUser: (state, action) => {\n      state.user = action.payload.user;\n    },\n    setUserSettings: (state, action) => {\n      state.userSettings = action.payload.userSettings;\n    },\n  },\n  routines: {\n    login: 'LOGIN',\n    logout: 'LOGOUT',\n    createUser: 'CREATE_USER',\n  },\n  routineReducers: (routines) => ({\n    [routines.logout.SUCCESS]: (state) => {\n      state.user = {};\n    },\n    [routines.login.SUCCESS]: (state, action) => {\n      state.user = action.payload.user;\n    },\n    [routines.createUser.SUCCESS]: (state, action) => {\n      state.user = action.payload.user;\n    },\n  }),\n});\n\nexport default sessionSlice;\n","import sessionSlice from '../sessionSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = sessionSlice;\n\nfunction useLogout() {\n  const dispatch = useDispatch();\n\n  const logout = useCallback(() => {\n    dispatch(routines.logout.trigger());\n  }, [dispatch]);\n\n  return logout;\n}\n\nexport default useLogout;\n","import React from 'react';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider as MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst DEFAULT = 'dark'\n\nexport const useIsDarkTheme = () => {\n  return true;\n  // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  // return prefersDarkMode;\n};\n\nfunction ThemeProvider({ children }) {\n  // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: DEFAULT // prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    []\n    // [prefersDarkMode]\n  );\n\n  return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n}\n\nexport default ThemeProvider;\n","import React, { useRef } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport CreateHabitDialog from 'ui/molecules/dialogs/CreateHabitDialog';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n// import EventNoteIcon from '@material-ui/icons/EventNote';\nimport Grow from '@material-ui/core/Grow';\nimport IconButton from '@material-ui/core/IconButton';\n// import Drawer from 'ui/molecules/drawer/Drawer';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport MuiLink from '@material-ui/core/Link';\nimport MenuList from '@material-ui/core/MenuList';\n// import NotesIcon from '@material-ui/icons/Notes';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useToggle from 'hooks/useToggle';\nimport useLogout from 'redux-modules/session/hooks/useLogout';\nimport useLoggedIn from 'hooks/useLoggedIn';\nimport { Link } from 'react-router-dom';\nimport { useIsDarkTheme } from '../themeProvider/ThemeProvider';\nimport { css } from 'emotion';\nimport { getDate } from 'date-fns';\n\nconst currentDay = () => {\n  return `${getDate(Date.now())}`.padStart(2, '0');\n};\n\nconst calendarStyles = css`\n  position: relative;\n  ::after {\n    content: '${currentDay()}';\n    position: absolute;\n    left: 10px;\n    top: 10px;\n  }\n`;\n\nconst linkStyles = css`\n  a {\n    color: inherit;\n    text-decoration: none;\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nconst NavBar = (props) => {\n  const [toggle, toggleState] = useToggle();\n  const openMenuRef = useRef();\n\n  const isLoggedIn = useLoggedIn();\n  const logout = useLogout();\n\n  const isDarkTheme = useIsDarkTheme();\n\n  return (\n    <AppBar color={isDarkTheme ? 'inherit' : 'primary'} position=\"sticky\">\n      <Toolbar\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {/* TODO: notes tab */}\n        {/* <Drawer>\n          <Link style={{ color: 'inherit', textDecoration: 'none' }} to=\"/\">\n            <Drawer.ListItem text=\"Habits\" icon={EventNoteIcon} />\n          </Link>\n          <Link style={{ color: 'inherit', textDecoration: 'none' }} to=\"/notes\">\n            <Drawer.ListItem text=\"Notes\" icon={NotesIcon} />\n          </Link>\n        </Drawer> */}\n        <Typography variant=\"h6\" noWrap>\n          <Link style={{ color: 'inherit', textDecoration: 'none' }} to=\"/\">\n            Habit Tracker\n          </Link>\n        </Typography>\n        <div\n          style={{\n            flexGrow: 1,\n            maxWidth: '960px',\n          }}\n        />\n        <CreateHabitDialog />\n        <div className={calendarStyles}>\n          <CalendarTodayIcon fontSize=\"large\" />\n        </div>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          ref={openMenuRef}\n          onClick={toggleState}\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <Popper open={toggle} anchorEl={openMenuRef.current} transition>\n          {({ TransitionProps, placement }) => {\n            return (\n              <Grow\n                {...TransitionProps}\n                style={{\n                  transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n                }}\n              >\n                <Paper>\n                  <ClickAwayListener onClickAway={toggleState}>\n                    <>\n                      {!isLoggedIn && (\n                        <MenuList\n                          autoFocusItem={toggle}\n                          id=\"menu-list-grow\"\n                          onKeyDown={toggleState}\n                          className={linkStyles}\n                        >\n                          <MenuItem onClick={toggleState}>\n                            <Link component={MuiLink} to=\"/signin\">\n                              Login\n                            </Link>\n                          </MenuItem>\n                          {process.env.NODE_ENV !== 'production' && (\n                            <MenuItem onClick={toggleState}>\n                              <Link component={MuiLink} to=\"/signup\">\n                                Sign Up\n                              </Link>\n                            </MenuItem>\n                          )}\n                        </MenuList>\n                      )}\n                      {isLoggedIn && (\n                        <MenuList\n                          autoFocusItem={toggle}\n                          id=\"menu-list-grow\"\n                          onKeyDown={toggleState}\n                          className={linkStyles}\n                        >\n                          {/* <MenuItem onClick={toggleState}>\n                            <Link component={MuiLink} to=\"/profile\">\n                              Profile\n                            </Link>\n                          </MenuItem>\n                          <MenuItem onClick={toggleState}>My account</MenuItem> */}\n                          <MenuItem\n                            onClick={() => {\n                              logout();\n                              toggleState();\n                            }}\n                          >\n                            Logout\n                          </MenuItem>\n                        </MenuList>\n                      )}\n                    </>\n                  </ClickAwayListener>\n                </Paper>\n              </Grow>\n            );\n          }}\n        </Popper>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import sessionSlice from '../sessionSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = sessionSlice;\n\nfunction useLogin() {\n  const dispatch = useDispatch();\n\n  const login = useCallback(\n    (loginInfo) => {\n      dispatch(routines.login.trigger(loginInfo));\n    },\n    [dispatch]\n  );\n\n  return login;\n}\n\nexport default useLogin;\n","import React, { useCallback, SyntheticEvent, FunctionComponent } from 'react';\nimport useForm from 'hooks/useForm';\nimport { Link } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport { css, cx } from 'emotion';\nimport useLogin from 'redux-modules/session/hooks/useLogin';\n\nconst formStyles = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  > * {\n    margin: 5px;\n  }\n`;\n\ntype SignInProps = {\n  className?: string | undefined;\n};\n\nconst SignIn: FunctionComponent<SignInProps> = ({ className }) => {\n  const { formState, updateField } = useForm();\n  const login = useLogin();\n\n  const onSubmit = useCallback(\n    (event: SyntheticEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      login(formState);\n    },\n    [formState, login]\n  );\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className={cx(formStyles, className)}>\n        Sign In\n        <TextField\n          type=\"email\"\n          label=\"Email Address\"\n          value={formState.email || ''}\n          name=\"email\"\n          placeholder=\"Email Address\"\n          onChange={updateField}\n        />\n        <TextField\n          type=\"password\"\n          label=\"Password\"\n          required\n          name=\"password\"\n          value={formState.password || ''}\n          placeholder=\"Your Password\"\n          onChange={updateField}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Sign in\n        </Button>\n        <Link to=\"/signup\">Sign up here</Link>\n        <Link to=\"/passwordreset\">Forgot Password?</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import sessionSlice from '../sessionSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = sessionSlice;\n\nfunction useCreateUser() {\n  const dispatch = useDispatch();\n\n  const createUser = useCallback(\n    (userInfo) => {\n      const { displayName, email, password } = userInfo;\n      dispatch(routines.createUser.trigger({ displayName, email, password }));\n    },\n    [dispatch]\n  );\n\n  return createUser;\n}\n\nexport default useCreateUser;\n","import React, { useCallback, SyntheticEvent, FunctionComponent } from 'react';\nimport useForm from 'hooks/useForm';\nimport { Link } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport { css, cx } from 'emotion';\nimport useCreateUser from 'redux-modules/session/hooks/useCreateUser';\nconst formStyles = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  > * {\n    margin: 10px;\n  }\n`;\n\ntype SignUpProps = {\n  className?: string | undefined;\n};\n\nconst SignUp: FunctionComponent<SignUpProps> = ({ className }) => {\n  const { formState, updateField } = useForm();\n\n  const createUser = useCreateUser();\n\n  const onSubmit = useCallback(\n    (event: SyntheticEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      createUser(formState);\n    },\n    [createUser, formState]\n  );\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className={cx(formStyles, className)}>\n        Sign Up\n        <TextField\n          type=\"text\"\n          label=\"Display Name\"\n          value={formState.displayName || ''}\n          name=\"displayName\"\n          placeholder=\"Display Name\"\n          onChange={updateField}\n          required\n        />\n        <TextField\n          type=\"email\"\n          label=\"Email Address\"\n          value={formState.email || ''}\n          name=\"email\"\n          placeholder=\"Email Address\"\n          onChange={updateField}\n          required\n        />\n        <TextField\n          type=\"password\"\n          label=\"Password\"\n          required\n          name=\"password\"\n          value={formState.password || ''}\n          placeholder=\"Your Password\"\n          onChange={updateField}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Sign Up\n        </Button>\n        <Link to=\"/signin\">Sign in here</Link>\n        <Link to=\"/passwordreset\">Forgot Password?</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from 'react';\n\nfunction ProfilePage() {\n  return <div></div>;\n}\n\nexport default ProfilePage;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\n\nfunction useAuthPersistence() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((userAuth) => {\n      dispatch(sessionSlice.actions.setCurrentUser({ user: userAuth || {} }));\n    });\n  }, [dispatch]);\n}\n\nexport default useAuthPersistence;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport useLoggedIn from 'hooks/useLoggedIn';\n\nfunction AuthRoute({ path, children }) {\n  const isLoggedIn = useLoggedIn();\n\n  if (!isLoggedIn) {\n    return <Redirect to={'/'} />;\n  }\n\n  return <Route path={path}>{children}</Route>;\n}\n\nexport default AuthRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport useLoggedIn from 'hooks/useLoggedIn';\n\nfunction UnAuthRoute({ path, children }) {\n  const isLoggedIn = useLoggedIn();\n\n  if (isLoggedIn) {\n    return <Redirect to={'/'} />;\n  }\n\n  return <Route path={path}>{children}</Route>;\n}\n\nexport default UnAuthRoute;\n","import get from 'lodash/get';\nimport sessionSliceSelector from 'redux-modules/session/selectors/sessionSliceSelector';\nimport { createSelector } from '@reduxjs/toolkit';\n\nconst habitIdsSelector = createSelector([sessionSliceSelector], (session) =>\n  get(session, 'userSettings.habitIds', [])\n);\n\nexport default habitIdsSelector;\n","import { useSelector } from 'react-redux';\nimport habitIdsSelector from '../selectors/habitIdsSelectors';\n\nconst useHabitIds = () => {\n  const habitIds = useSelector(habitIdsSelector);\n\n  return habitIds;\n};\n\nexport default useHabitIds;\n","import { getDay, getDaysInMonth } from 'date-fns';\n\nconst SATURDAY = 6;\n\nfunction calculateWeeksInMonth({ month, year }) {\n  // month is 0-indexed\n  const numDaysInMonth = getDaysInMonth(new Date(year, month));\n  // 0 Sun, 1 Mon, etc.\n  const firstDayOfMonth = getDay(new Date(year, month, 1));\n\n  const weeks = [];\n  let currentDay = 1;\n\n  while (currentDay <= numDaysInMonth) {\n    const week = [];\n\n    if (weeks.length === 0) {\n      // build first week\n      for (let i = 0; i <= SATURDAY; i++) {\n        if (i < firstDayOfMonth) {\n          week.push(-1);\n        } else {\n          week.push(currentDay);\n          currentDay++;\n        }\n      }\n    } else {\n      for (let i = 0; i <= SATURDAY; i++) {\n        if (currentDay <= numDaysInMonth) {\n          week.push(currentDay);\n        } else {\n          week.push(-1);\n        }\n        currentDay++;\n      }\n    }\n    weeks.push(week);\n  }\n\n  return weeks;\n}\n\nexport default calculateWeeksInMonth;\n","import React from 'react';\nimport noop from 'lodash/noop';\nimport { css, cx } from 'emotion';\nimport { useIsDarkTheme } from 'ui/atoms/themeProvider/ThemeProvider';\n\nconst dayContainerStyles = css`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst clickableStyles = css`\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(180, 180, 180);\n  }\n`;\n\nconst dayStyles = css`\n  height: 30px;\n  width: 30px;\n  border-radius: 5px;\n  background-color: rgb(220, 220, 220);\n  margin: 5px;\n`;\n\nconst activeStyles = css`\n  background-color: rgb(51, 192, 255);\n  &:hover {\n    background-color: rgb(51, 192, 255, 0.5);\n  }\n`;\n\nconst darkThemeStyles = css`\n  background-color: #282d33;\n  color: white;\n`;\n\nconst darkActiveStyles = css`\n  background-color: gray;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nfunction Week({ week = [], onDayClick, history }) {\n  const isDarkTheme = useIsDarkTheme();\n\n  return (\n    <div className={cx(dayContainerStyles)}>\n      {week.map((day, idx) => {\n        const onClick = day > 0 ? () => onDayClick && onDayClick(day) : noop;\n\n        const className = cx(\n          dayStyles,\n          isDarkTheme && darkThemeStyles,\n          day > 0 && clickableStyles,\n          history[day] && !isDarkTheme && activeStyles,\n          history[day] && isDarkTheme && darkActiveStyles\n        );\n        return (\n          <div key={`${day}-${idx}`} className={className} onClick={onClick}>\n            {day > 0 ? day : ''}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Week;\n","function habitsSliceSelector(state) {\n  return state.habits;\n}\nexport default habitsSliceSelector;\n","import { createSelector } from '@reduxjs/toolkit';\nimport habitsSliceSelector from './habitsSliceSelector';\n\nconst habitSelector = (habitId) =>\n  createSelector([habitsSliceSelector], (habits) => habits[habitId]);\n\nexport default habitSelector;\n","import { useSelector } from 'react-redux';\nimport habitSelector from '../selectors/habitSelector';\n\nconst useHabit = (habitId) => {\n  const habit = useSelector(habitSelector(habitId));\n\n  return habit;\n};\n\nexport default useHabit;\n","import React, { useMemo, useCallback } from 'react';\nimport get from 'lodash/get';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport calculateWeeksInMonth from './calculateWeeksInMonth';\nimport Week from './Week';\nimport { useDispatch } from 'react-redux';\nimport useHabit from 'redux-modules/habits/hooks/useHabit';\n\nfunction Calendar({ month, year, habitId }) {\n  const weeks = useMemo(() => calculateWeeksInMonth({ month, year }), [month, year]);\n  const dispatch = useDispatch();\n\n  const onDayClick = useCallback(\n    (day) => {\n      dispatch(habitsSlice.routines.updateHistory.trigger({ day, month, year, habitId }));\n    },\n    [dispatch, habitId, month, year]\n  );\n\n  const { history = {} } = useHabit(habitId);\n\n  return (\n    <div>\n      {weeks.map((week, idx) => {\n        return (\n          <Week\n            week={week}\n            key={idx}\n            onDayClick={onDayClick}\n            history={get(history, [year, month], {})}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Calendar;\n","import React, { useCallback, useState } from 'react';\nimport { getMonth, getYear } from 'date-fns';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForwardIos';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { css } from 'emotion';\n\nconst monthNavContainerStyles = css`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst navStyles = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst Months = [\n  { name: 'January' },\n  { name: 'February' },\n  { name: 'March' },\n  { name: 'April' },\n  { name: 'May' },\n  { name: 'June' },\n  { name: 'July' },\n  { name: 'August' },\n  { name: 'September' },\n  { name: 'October' },\n  { name: 'November' },\n  { name: 'December' },\n];\n\nfunction MonthNav({\n  children,\n  currentMonth = getMonth(Date.now()),\n  currentYear = getYear(Date.now()),\n}) {\n  const [month, setMonth] = useState(currentMonth);\n  const [year, setYear] = useState(currentYear);\n  const [notesOpen, setNotesOpen] = useState(false);\n\n  const toggleNotes = () => {\n    setNotesOpen(!notesOpen)\n  }\n\n  const navigateBackwards = useCallback(() => {\n    let newMonth = month - 1;\n    if (newMonth < 0) {\n      newMonth = 11;\n      let newYear = year - 1;\n      setYear(newYear);\n    }\n    setMonth(newMonth);\n  }, [month, year]);\n\n  const navigateForwards = useCallback(() => {\n    let newMonth = month + 1;\n    if (newMonth > 11) {\n      newMonth = 0;\n      let newYear = year + 1;\n      setYear(newYear);\n    }\n    setMonth(newMonth);\n  }, [month, year]);\n\n  return (\n    <div className={monthNavContainerStyles}>\n      <div className={navStyles}>\n        <div className={navStyles}>\n          <IconButton size=\"small\" onClick={navigateBackwards}>\n            <ArrowBackIcon />\n          </IconButton>\n          <IconButton size=\"small\" onClick={navigateForwards}>\n            <ArrowForwardIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {Months[month].name} {year}\n          </Typography>\n        </div>\n        <IconButton size=\"small\" onClick={toggleNotes}>\n          {notesOpen ?\n            <KeyboardArrowUpIcon /> :\n            <KeyboardArrowDownIcon />\n          }\n        </IconButton>\n      </div>\n      <div>{children({ month, year, notesOpen })}</div>\n    </div>\n  );\n}\n\nexport default MonthNav;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useDeleteHabit(habitId) {\n  const dispatch = useDispatch();\n\n  const deleteHabit = useCallback(() => {\n    dispatch(routines.deleteHabit.trigger({ habitId }));\n  }, [dispatch, habitId]);\n\n  return deleteHabit;\n}\n\nexport default useDeleteHabit;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useUpdateHabit() {\n  const dispatch = useDispatch();\n\n  const updateHabit = useCallback(\n    ({ id, habit }) => {\n      dispatch(routines.updateHabit.trigger({ id, habit }));\n    },\n    [dispatch]\n  );\n\n  return updateHabit;\n}\n\nexport default useUpdateHabit;\n","import React, { FunctionComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport useForm from 'hooks/useForm';\nimport useHabit from 'redux-modules/habits/hooks/useHabit';\nimport useUpdateHabit from 'redux-modules/habits/hooks/useUpdateHabit';\n\ntype RenameHabitDialogProps = {\n  habitId: string;\n  isOpen: boolean;\n  setIsRenameOpen: Function;\n};\n\nconst RenameHabitDialog: FunctionComponent<RenameHabitDialogProps> = ({\n  habitId,\n  isOpen,\n  setIsRenameOpen,\n}) => {\n  const habit: { name: string; history: object | undefined } = useHabit(habitId);\n  const { formState, updateField, resetForm } = useForm();\n  const updateHabit = useUpdateHabit();\n  return (\n    <Dialog open={isOpen} onClose={() => setIsRenameOpen(false)} aria-labelledby=\"update-dialog\">\n      <DialogTitle id=\"update-dialog\">Update Habit Name - {habit.name}</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"habitName\"\n          name=\"habitName\"\n          value={formState.habitName || ''}\n          onChange={updateField}\n          label=\"Habit Name\"\n          type=\"text\"\n          fullWidth\n          autoComplete=\"off\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setIsRenameOpen(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={(e) => {\n            updateHabit({ id: habitId, habit: { name: formState.habitName } });\n            resetForm();\n            setIsRenameOpen(false);\n          }}\n          color=\"primary\"\n        >\n          Update Name\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default RenameHabitDialog;\n","import React, { FunctionComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\ntype DeleteHabitDialogProps = {\n  isOpen: boolean;\n  deleteHabit: Function;\n  closeDialog: Function;\n};\n\nconst DeleteHabitDialog: FunctionComponent<DeleteHabitDialogProps> = ({\n  isOpen,\n  deleteHabit,\n  closeDialog,\n}) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={() => {\n        closeDialog();\n      }}\n      aria-labelledby=\"update-dialog\"\n    >\n      <DialogTitle id=\"update-dialog\">Delete Habit</DialogTitle>\n      <DialogContent>Are you sure you want to delete this habit?</DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            closeDialog();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={(e) => {\n            deleteHabit();\n            closeDialog();\n          }}\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteHabitDialog;\n","import React, { FunctionComponent, useState, useRef, MutableRefObject } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport useDeleteHabit from 'redux-modules/habits/hooks/useDeleteHabit';\nimport useHabit from 'redux-modules/habits/hooks/useHabit';\nimport RenameHabitDialog from '../dialogs/RenameHabitDialog';\nimport DeleteHabitDialog from '../dialogs/DeleteHabitDialog';\n\ntype HabitOptionProps = {\n  habitId: string;\n};\n\nconst HabitOptions: FunctionComponent<HabitOptionProps> = ({ habitId }) => {\n  const habit: { name: string; history: object | undefined } = useHabit(habitId);\n\n  const iconButtonRef = useRef() as MutableRefObject<HTMLButtonElement>;\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const openOptions = () => setIsOpen(true);\n  const closeOptions = () => setIsOpen(false);\n\n  const [renameOpen, setIsRenameOpen] = useState(false);\n  const [deleteOpen, setIsDeleteOpen] = useState(false);\n\n  const deleteHabit = useDeleteHabit(habitId);\n\n  if (!habit) {\n    return null;\n  }\n  return (\n    <>\n      <IconButton\n        ref={iconButtonRef}\n        edge=\"end\"\n        aria-label=\"options for habit\"\n        onClick={openOptions}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={iconButtonRef.current}\n        keepMounted\n        open={isOpen}\n        onClose={closeOptions}\n      >\n        <MenuItem\n          onClick={() => {\n            setIsRenameOpen(true);\n            closeOptions();\n          }}\n        >\n          Rename\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setIsDeleteOpen(true);\n            closeOptions();\n          }}\n        >\n          Delete\n        </MenuItem>\n      </Menu>\n      <RenameHabitDialog isOpen={renameOpen} habitId={habitId} setIsRenameOpen={setIsRenameOpen} />\n      <DeleteHabitDialog\n        isOpen={deleteOpen}\n        deleteHabit={deleteHabit}\n        closeDialog={() => setIsDeleteOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default HabitOptions;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useSwapHabit() {\n  const dispatch = useDispatch();\n\n  const swapHabit = useCallback(\n    ({ firstHabitId, secondHabitId }) => {\n      dispatch(routines.swapHabit.trigger({ firstHabitId, secondHabitId }));\n    },\n    [dispatch]\n  );\n\n  return swapHabit;\n}\n\nexport default useSwapHabit;\n","import React, { FunctionComponent } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { HabitDragItem } from './Habit';\nimport { css, cx } from 'emotion';\nimport useSwapHabit from 'redux-modules/habits/hooks/useSwapHabit';\n\nconst hoveringStyles = css`\n  opacity: 0.8;\n`;\n\nconst canDropStyles = css`\n  opacity: 0.5;\n`;\n\ntype Props = {\n  habitId: string;\n};\n\nconst HabitDropZone: FunctionComponent<Props> = (props) => {\n  const { habitId } = props;\n  const swapHabit = useSwapHabit();\n  const [dropCollectedProps, drop] = useDrop({\n    accept: 'habit',\n    canDrop: (item: HabitDragItem) => {\n      return item.type === 'habit' && item.id !== habitId;\n    },\n    drop: (item: HabitDragItem, monitor) => {\n      const { id: droppedItemId, type: droppedItemType } = item;\n      if (droppedItemType === 'habit') {\n        // habit dropped, dispatch action to reorder habits\n        swapHabit({ firstHabitId: droppedItemId, secondHabitId: habitId });\n      }\n    },\n    collect: (monitor) => ({\n      canDrop: monitor.canDrop(),\n      isHovering: monitor.isOver(),\n    }),\n  });\n\n  return (\n    <div\n      ref={drop}\n      className={cx({\n        [canDropStyles]: dropCollectedProps.canDrop,\n        [hoveringStyles]: dropCollectedProps.isHovering && dropCollectedProps.canDrop,\n      })}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default HabitDropZone;\n","import React, { FunctionComponent, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport useForm from 'hooks/useForm';\nimport { css } from 'emotion';\n\nconst formStyles: string = css`\n  display: flex;\n  flex-direction: column;\n`\nconst buttonContainerStyles: string = css`\n  display: flex;\n  flex-direction: row;\n`\nconst preStyles: string = css`\n  padding: 0.75rem;\n  border-radius: 0.5rem;\n  border: 1px solid black;\n`\n\nconst textAreaStyles = css`\n  padding: 0.75rem;\n  border-radius: 0.5rem;\n  border: 1px solid black;\n  outline: none;\n`\n\ntype Props = {\n  notes: string;\n  notesOpen: boolean;\n  updateNotes?: (notes: string) => any;\n}\n\nconst HabitNotes: FunctionComponent<Props> = ({ notes, notesOpen, updateNotes }) => {\n  const [editNotes, setEditNotes] = useState(false)\n  const { formState, updateField, resetForm } = useForm();\n\n  const toggleEditNotes = () => {\n    setEditNotes(!editNotes)\n  }\n\n  if (!notesOpen) {\n    return null;\n  }\n\n  if (!editNotes) {\n    return <pre className={preStyles} onClick={toggleEditNotes}>{notes.length ? notes : 'No Notes'}</pre>\n  }\n  return (\n    <div className={formStyles}>\n      <TextareaAutosize\n        className={textAreaStyles}\n        autoFocus\n        id=\"notes\"\n        name=\"notes\"\n        value={formState.notes ?? notes ?? ''}\n        onChange={updateField}\n        autoComplete=\"off\"\n      />\n      <div className={buttonContainerStyles}>\n        <Button onClick={() => setEditNotes(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={(e) => {\n            updateNotes && updateNotes(formState.notes)\n            resetForm();\n            setEditNotes(false);\n          }}\n          color=\"primary\"\n        >Update</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default HabitNotes;","import React, { FunctionComponent } from 'react';\nimport Calendar from 'ui/molecules/calendar/Calendar';\nimport Card from '@material-ui/core/Card';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport IconButton from '@material-ui/core/IconButton';\nimport MonthNav from 'ui/molecules/calendar/MonthNav';\nimport Typography from '@material-ui/core/Typography';\nimport useHabit from 'redux-modules/habits/hooks/useHabit';\nimport { css } from 'emotion';\nimport { useDrag } from 'react-dnd';\nimport HabitOptions from './HabitOptions';\nimport HabitDropZone from './HabitDropZone';\nimport HabitNotes from './HabitNotes';\nimport useUpdateHabit from 'redux-modules/habits/hooks/useUpdateHabit';\n\nconst cardStyles: string = css`\n  margin: 8px;\n  padding: 16px;\n  min-height: 352px;\n  text-transform: capitalize;\n  position: relative;\n`;\n\nconst fillerStyles: string = css`\n  flex-grow: 1;\n`;\n\nconst cardHeaderStyles: string = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst titleStyles: string = css`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 18ch;\n`;\n\ntype HabitProps = {\n  habitId: string;\n  order: number;\n};\n\nexport type HabitDragItem = {\n  type: string;\n  id: string;\n  order: number;\n};\n\ntype HabitType = {\n  name: string;\n  history: object | undefined;\n  notes: string | undefined\n}\n\nconst Habit: FunctionComponent<HabitProps> = ({ habitId, order }) => {\n  const habit: HabitType = useHabit(habitId);\n\n  const [, drag, preview] = useDrag({\n    item: { id: habitId, type: 'habit', order },\n  });\n\n  const updateHabit = useUpdateHabit()\n\n  const updateNotes = (notes: string) => {\n    updateHabit({ id: habitId, habit: { notes } })\n  }\n\n  if (!habit) {\n    return null;\n  }\n  const { name, notes } = habit;\n  return (\n    <HabitDropZone habitId={habitId}>\n      <Card className={cardStyles} ref={preview}>\n        <div className={cardHeaderStyles}>\n          <IconButton\n            ref={drag}\n            edge=\"start\"\n            aria-label=\"drag drop indicator for reordering habits\"\n          >\n            <DragIndicatorIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={titleStyles}>\n            {name}\n          </Typography>\n          <div className={fillerStyles} />\n          <HabitOptions habitId={habitId} />\n        </div>\n        <MonthNav>\n          {({ month, year, notesOpen }: { month: number; year: number; notesOpen: boolean }) => (\n            <>\n              <HabitNotes notes={notes ?? ''} notesOpen={notesOpen} updateNotes={updateNotes} />\n              <Calendar month={month} year={year} habitId={habitId} />\n            </>\n          )}\n        </MonthNav>\n      </Card>\n    </HabitDropZone>\n  );\n};\n\nexport default Habit;\n","import React, { FunctionComponent } from 'react';\nimport useHabitIds from 'redux-modules/habits/hooks/useHabitIds';\nimport Habit from '../habit/Habit';\nimport { css } from 'emotion';\nimport { Flipper, Flipped } from 'react-flip-toolkit';\n\nconst habitContainerStyles = css`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  max-width: 1000px;\n  align-items: center;\n  @media only screen and (max-width: 1000px) {\n    justify-content: center;\n  }\n`;\n\nconst Habits: FunctionComponent = () => {\n  const habitIds = useHabitIds();\n  return (\n    <>\n      {habitIds.length > 0 && (\n        <Flipper flipKey={habitIds.join('')}>\n          <div className={habitContainerStyles}>\n            {habitIds.map((habitId: string, idx: number) => {\n              return (\n                <Flipped key={habitId} flipId={habitId}>\n                  {/* <Flipped/> needs a div child */}\n                  <div>\n                    <Habit habitId={habitId} order={idx} />\n                  </div>\n                </Flipped>\n              );\n            })}\n          </div>\n        </Flipper>\n      )}\n    </>\n  );\n};\n\nexport default Habits;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nfunction LandingPage() {\n  return (\n    <div>\n      <Typography variant=\"h1\">Habit Tracker</Typography>\n      <Typography variant=\"h4\">A Simple Habit Tracker App</Typography>\n      <Typography variant=\"h5\">Login To Begin</Typography>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport NavBar from 'ui/atoms/navigation/NavBar';\nimport SignIn from 'ui/pages/session/SignIn';\nimport SignUp from 'ui/pages/session/SignUp';\nimport ProfilePage from 'ui/pages/ProfilePage';\nimport useAuthPersistence from 'hooks/useAuthPersistence';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport AuthRoute from 'ui/atoms/route/AuthRoute';\nimport UnAuthRoute from 'ui/atoms/route/UnAuthRoute';\nimport { css } from 'emotion';\nimport useLoggedIn from 'hooks/useLoggedIn';\nimport Habits from 'ui/molecules/habits/Habits';\nimport LandingPage from 'ui/pages/LandingPage';\n\nconst appStyles = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction App() {\n  useAuthPersistence();\n  const isLoggedIn = useLoggedIn();\n  return (\n    <>\n      <NavBar />\n      <div>\n        <Switch>\n          <UnAuthRoute path=\"/signin\">\n            <SignIn />\n          </UnAuthRoute>\n          <UnAuthRoute path=\"/signup\">\n            <SignUp />\n          </UnAuthRoute>\n          <UnAuthRoute path=\"/passwordreset\">\n            <div>WIP</div>\n          </UnAuthRoute>\n          <AuthRoute path=\"/profile\">\n            <ProfilePage />\n          </AuthRoute>\n          <AuthRoute path=\"/notes\">\n            <ProfilePage />\n          </AuthRoute>\n          <Route path=\"/\">\n            <div className={appStyles}>{isLoggedIn ? <Habits /> : <LandingPage />}</div>\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","import { auth } from '../firebase';\n\nasync function loginUser({ email, password }) {\n  return await auth.signInWithEmailAndPassword(email, password);\n}\n\nexport default loginUser;\n","import { put, call } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport loginUser from 'firebase/users/loginUser';\nimport { push } from 'connected-react-router';\n\nfunction* loginSaga(action) {\n  const { email, password } = action.payload;\n  try {\n    yield put(sessionSlice.routines.login.request());\n\n    const { user } = yield call(loginUser, { email, password });\n\n    yield put(\n      sessionSlice.routines.login.success({\n        user,\n      })\n    );\n    yield put(push('/'));\n  } catch (e) {\n    console.error(e);\n    yield put(sessionSlice.routines.login.failure(e));\n  } finally {\n    yield put(sessionSlice.routines.login.fulfill());\n  }\n}\n\nexport default loginSaga;\n","import { firestore, auth } from '../firebase';\n\nasync function generateUserDocument(user) {\n  if (!user) throw new Error('User does not exist');\n\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const newUserInfo = {\n      habitIds: [],\n    };\n\n    await userRef.set(newUserInfo);\n\n    return newUserInfo;\n  }\n}\n\nasync function createUser({ email, password, displayName }) {\n  const { user } = await auth.createUserWithEmailAndPassword(email, password);\n\n  user.updateProfile({\n    displayName,\n  });\n\n  generateUserDocument(user);\n\n  return user;\n}\n\nexport default createUser;\n","import { put, call } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport createUser from 'firebase/users/createUser';\nimport { push } from 'connected-react-router';\n\nfunction* createUserSaga(action) {\n  const { displayName, email, password } = action.payload;\n\n  try {\n    yield put(sessionSlice.routines.createUser.request());\n\n    const user = yield call(createUser, { email, password, displayName });\n\n    yield put(\n      sessionSlice.routines.createUser.success({\n        user,\n      })\n    );\n\n    yield put(push('/'));\n  } catch (e) {\n    console.error(e);\n    yield put(sessionSlice.routines.createUser.failure(e));\n  } finally {\n    yield put(sessionSlice.routines.createUser.fulfill());\n  }\n}\n\nexport default createUserSaga;\n","import { auth } from '../firebase';\n\nfunction logoutUser() {\n  return auth.signOut();\n}\n\nexport default logoutUser;\n","import { put, call } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport logoutUser from 'firebase/users/logoutUser';\n\nfunction* logoutSaga() {\n  try {\n    yield put(sessionSlice.routines.logout.request());\n\n    yield call(logoutUser);\n    yield put(sessionSlice.routines.logout.success());\n  } catch (e) {\n    console.error(e);\n    yield put(sessionSlice.routines.logout.failure(e));\n  } finally {\n    yield put(sessionSlice.routines.logout.fulfill());\n  }\n}\n\nexport default logoutSaga;\n","import { createSelector } from '@reduxjs/toolkit';\nimport get from 'lodash/get';\nimport sessionSliceSelector from './sessionSliceSelector';\n\nconst currentUserIdSelector = createSelector(sessionSliceSelector, (session) => {\n  return get(session, 'user.uid', undefined);\n});\n\nexport default currentUserIdSelector;\n","import { call, cancel, cancelled, fork, put, select, take, takeLatest } from 'redux-saga/effects';\nimport { eventChannel } from 'redux-saga';\nimport { firestore } from '../../../firebase/firebase';\nimport currentUserIdSelector from '../selectors/currentUserIdSelector';\nimport sessionSlice from '../sessionSlice';\n\nfunction subscriptionChannel({ userId }) {\n  return eventChannel((emitter) => {\n    const userSettingsRef = firestore.doc(`users/${userId}`);\n\n    const unsubscribe = userSettingsRef.onSnapshot((querySnapshot) => {\n      emitter({\n        data: querySnapshot.data(),\n        userId,\n      });\n    });\n\n    return unsubscribe;\n  });\n}\n\nexport function* listen() {\n  const currentUserId = yield select(currentUserIdSelector);\n\n  const channel = yield call(subscriptionChannel, { userId: currentUserId });\n\n  try {\n    while (true) {\n      const { data } = yield take(channel);\n\n      yield put(sessionSlice.actions.setUserSettings({ userSettings: data }));\n    }\n  } finally {\n    if (yield cancelled()) channel.close();\n  }\n}\n\nexport function* handleSubscribe(action) {\n  const listenTask = yield fork(listen, action);\n\n  const unsubscribed = yield take(sessionSlice.routines.logout.SUCCESS);\n\n  if (unsubscribed.type === sessionSlice.routines.logout.SUCCESS) {\n    yield cancel(listenTask);\n  }\n}\n\nexport function* subscribeToUserSettingsSaga() {\n  yield takeLatest(\n    [\n      sessionSlice.actions.setCurrentUser,\n      sessionSlice.routines.login.SUCCESS,\n      sessionSlice.routines.createUser.SUCCESS,\n    ],\n    handleSubscribe\n  );\n}\n","import { fork, takeEvery } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport loginSaga from './loginSaga';\nimport createUserSaga from './createUserSaga';\nimport logoutSaga from './logoutSaga';\nimport { subscribeToUserSettingsSaga } from './subcribeToUserSettingsSaga';\n\nfunction* sessionSagas() {\n  yield takeEvery(sessionSlice.routines.login.TRIGGER, loginSaga);\n  yield takeEvery(sessionSlice.routines.logout.TRIGGER, logoutSaga);\n  yield takeEvery(sessionSlice.routines.createUser.TRIGGER, createUserSaga);\n  yield fork(subscribeToUserSettingsSaga);\n}\n\nexport default sessionSagas;\n","import { firestore } from '../firebase';\n\nasync function createHabit({ userId, habitName, options = {} }) {\n  const userSettingsRef = firestore.collection('users').doc(userId);\n\n  const habitRef = firestore.collection('habits').doc();\n  const habitId = habitRef.id;\n\n  await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    transaction.set(habitRef, { name: habitName, userId, archived: false, ...options });\n\n    transaction.update(userSettingsRef, { habitIds: [...userSettings.habitIds, habitId] });\n  });\n\n  return [habitId, (await firestore.collection('habits').doc(habitId).get()).data()];\n}\n\nexport default createHabit;\n","import { call, put, select } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\nimport createHabit from 'firebase/habits/createHabit';\n\nfunction* createHabitSaga(action) {\n  const { habitName, options = {} } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(habitsSlice.routines.createHabit.request());\n    const [habitId, newHabit] = yield call(createHabit, {\n      userId: currentUserId,\n      habitName,\n      options,\n    });\n\n    yield put(habitsSlice.routines.createHabit.success({ habit: newHabit, id: habitId }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.createHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.createHabit.fulfill());\n  }\n}\n\nexport default createHabitSaga;\n","import { firestore } from '../firebase';\n\nasync function updateHabit({ id, habit }) {\n  const habitRef = firestore.collection('habits').doc(id);\n\n  const newData = {\n    ...habit,\n  };\n\n  return await habitRef.set(newData, { merge: true });\n}\n\nexport default updateHabit;\n","import { call, put } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport updateHabit from 'firebase/habits/updateHabit';\n\nfunction* updateHabitSaga(action) {\n  const { id, habit } = action.payload;\n\n  try {\n    yield put(habitsSlice.routines.updateHabit.request());\n    yield call(updateHabit, {\n      id,\n      habit,\n    });\n\n    yield put(habitsSlice.routines.updateHabit.success({ id, updatedHabitProperties: habit }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.updateHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.updateHabit.fulfill());\n  }\n}\n\nexport default updateHabitSaga;\n","import { firestore } from '../firebase';\n\nasync function updateHistory({ year, month, day, habitId, newValue }) {\n  const habitRef = firestore.collection('habits').doc(habitId);\n\n  const newData = {\n    history: {\n      [year]: {\n        [month]: {\n          [day]: newValue,\n        },\n      },\n    },\n  };\n\n  return await habitRef.set(newData, { merge: true });\n}\n\nexport default updateHistory;\n","import { call, put, select } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport updateHistory from 'firebase/habits/updateHistory';\nimport habitSelector from '../selectors/habitSelector';\n\nfunction* updateHistorySaga(action) {\n  const { day, month, year, habitId } = action.payload;\n\n  try {\n    yield put(habitsSlice.routines.updateHistory.request());\n    const habit = yield select(habitSelector(habitId));\n\n    const { history = {} } = habit;\n\n    const currentValue = get(history, [year, month, day], false);\n\n    yield call(updateHistory, { year, month, day, habitId, newValue: !currentValue });\n\n    yield put(habitsSlice.routines.updateHistory.success());\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.updateHistory.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.updateHistory.fulfill());\n  }\n}\n\nexport default updateHistorySaga;\n","import { call, cancel, cancelled, fork, put, select, take, takeLatest } from 'redux-saga/effects';\nimport { eventChannel } from 'redux-saga';\nimport { firestore } from '../../../firebase/firebase';\nimport habitsSlice from '../habitsSlice';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\n\nfunction subscriptionChannel({ userId }) {\n  return eventChannel((emitter) => {\n    const habitsRef = firestore\n      .collection('habits')\n      .where('userId', '==', userId)\n      .where('archived', '==', false);\n\n    const unsubscribe = habitsRef.onSnapshot((querySnapshot) => {\n      querySnapshot.docChanges().forEach((change) => {\n        emitter({\n          type: change.type,\n          data: change.doc.data(),\n          id: change.doc.id,\n        });\n      });\n    });\n\n    return unsubscribe;\n  });\n}\n\nexport function* listen(action) {\n  const currentUserId = yield select(currentUserIdSelector);\n\n  const channel = yield call(subscriptionChannel, { userId: currentUserId });\n\n  try {\n    while (true) {\n      const { data: habit, id, type } = yield take(channel);\n\n      switch (type) {\n        case 'added': {\n          yield put(habitsSlice.actions.addHabit({ habit, id }));\n          break;\n        }\n        case 'modified': {\n          yield put(habitsSlice.actions.updateHabit({ habit, id }));\n          break;\n        }\n        case 'removed': {\n          yield put(habitsSlice.actions.deleteHabit({ habit, id }));\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  } finally {\n    if (yield cancelled()) channel.close();\n  }\n}\n\nexport function* handleSubscribe(action) {\n  const listenTask = yield fork(listen, action);\n  const unsubscribed = yield take(sessionSlice.routines.logout.SUCCESS);\n\n  if (unsubscribed.type === sessionSlice.routines.logout.SUCCESS) {\n    yield cancel(listenTask);\n  }\n}\n\nfunction* subscribeToHabitsSaga() {\n  yield takeLatest(\n    [\n      sessionSlice.actions.setCurrentUser,\n      sessionSlice.routines.login.SUCCESS,\n      sessionSlice.routines.createUser.SUCCESS,\n    ],\n    handleSubscribe\n  );\n}\n\nexport default subscribeToHabitsSaga;\n","import { firestore } from '../firebase';\n\nasync function deleteHabit({ userId, habitId }) {\n  const userSettingsRef = firestore.collection('users').doc(userId);\n  const habitRef = firestore.collection('habits').doc(habitId);\n\n  return await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    transaction.delete(habitRef);\n\n    const newHabitIds = userSettings.habitIds.filter((id) => id !== habitId);\n\n    transaction.update(userSettingsRef, { habitIds: newHabitIds });\n  });\n}\n\nexport default deleteHabit;\n","import { call, put, select } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\nimport deleteHabit from 'firebase/habits/deleteHabit';\n\nfunction* deleteHabitSaga(action) {\n  const { habitId } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(habitsSlice.routines.deleteHabit.request());\n\n    yield call(deleteHabit, {\n      userId: currentUserId,\n      habitId,\n    });\n\n    yield put(habitsSlice.routines.deleteHabit.success({ id: habitId }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.deleteHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.deleteHabit.fulfill());\n  }\n}\n\nexport default deleteHabitSaga;\n","import { firestore } from '../firebase';\n\nasync function swapHabitOrder({\n  userId,\n  firstHabitId,\n  secondHabitId,\n}: {\n  userId: string;\n  firstHabitId: string;\n  secondHabitId: string;\n}) {\n  const userSettingsRef = firestore.collection('users').doc(userId);\n\n  return await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    if (\n      !userSettings ||\n      !userSettings.habitIds.includes(firstHabitId) ||\n      !userSettings.habitIds.includes(secondHabitId)\n    ) {\n      throw new Error('habit does not exist, cannot move the habit');\n    }\n\n    const newHabitIds = [...userSettings.habitIds];\n    const firstHabitIdx = newHabitIds.indexOf(firstHabitId);\n    const secondHabitIdx = newHabitIds.indexOf(secondHabitId);\n\n    // swap IDs in arr\n    newHabitIds[firstHabitIdx] = secondHabitId;\n    newHabitIds[secondHabitIdx] = firstHabitId;\n\n    await transaction.update(userSettingsRef, { habitIds: newHabitIds });\n\n    return newHabitIds;\n  });\n}\n\nexport default swapHabitOrder;\n","import { call, put, select } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\nimport swapHabitOrder from 'firebase/habits/swapHabitOrder';\n\nfunction* swapHabitOrderSaga(action) {\n  const { firstHabitId, secondHabitId } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(habitsSlice.routines.swapHabit.request());\n    const habitIds = yield call(swapHabitOrder, {\n      userId: currentUserId,\n      firstHabitId,\n      secondHabitId,\n    });\n\n    yield put(habitsSlice.routines.swapHabit.success({ habitIds }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.swapHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.swapHabit.fulfill());\n  }\n}\n\nexport default swapHabitOrderSaga;\n","import { takeEvery, fork } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport createHabitSaga from './createHabitSaga';\nimport updateHabitSaga from './updateHabitSaga';\nimport updateHistorySaga from './updateHistorySaga';\nimport subscribeToHabitsSaga from './subcribeToHabitsSaga';\nimport deleteHabitSaga from './deleteHabitSaga';\nimport swapHabitOrderSaga from './swapHabitOrderSaga';\n\nfunction* habitSagas() {\n  yield takeEvery(habitsSlice.routines.createHabit.TRIGGER, createHabitSaga);\n  yield takeEvery(habitsSlice.routines.updateHabit.TRIGGER, updateHabitSaga);\n  yield takeEvery(habitsSlice.routines.updateHistory.TRIGGER, updateHistorySaga);\n  yield takeEvery(habitsSlice.routines.deleteHabit.TRIGGER, deleteHabitSaga);\n  yield takeEvery(habitsSlice.routines.swapHabit.TRIGGER, swapHabitOrderSaga);\n  yield fork(subscribeToHabitsSaga);\n}\n\nexport default habitSagas;\n","import { all, call, spawn } from 'redux-saga/effects';\nimport sessionsSaga from './session/sagas/sessionSagas';\nimport habitSagas from './habits/sagas/habitSagas';\nimport { routinePromiseWatcherSaga } from 'redux-saga-routines';\n\nfunction* rootSaga() {\n  const sagas = [sessionsSaga, habitSagas, routinePromiseWatcherSaga];\n\n  yield all(\n    sagas.map((saga) =>\n      spawn(function* allSagas() {\n        while (true) {\n          try {\n            yield call(saga);\n            break;\n          } catch (e) {\n            console.error(e);\n          }\n        }\n      })\n    )\n  );\n}\n\nexport default rootSaga;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './rootSaga';\nimport sessionSlice from './session/sessionSlice';\nimport habitsSlice from './habits/habitsSlice';\n\nconst createStore = ({ initialState = {}, history }) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware, routerMiddleware(history)];\n\n  const store = configureStore({\n    reducer: {\n      session: sessionSlice.reducer,\n      habits: habitsSlice.reducer,\n      router: connectRouter(history),\n    },\n    middleware,\n    preloadedState: initialState,\n  });\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default createStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport createStore from 'redux-modules/store';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch';\nimport ThemeProvider from 'ui/atoms/themeProvider/ThemeProvider';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { createHashHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { DndProvider } from 'react-dnd-multi-backend';\nimport { Provider } from 'react-redux';\n\nconst history = createHashHistory();\n\nfunction initApp() {\n  const store = createStore({ history });\n  return ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <DndProvider options={HTML5toTouch}>\n          <ConnectedRouter history={history}>\n            <ThemeProvider>\n              <CssBaseline />\n              <App />\n            </ThemeProvider>\n          </ConnectedRouter>\n        </DndProvider>\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ndocument.addEventListener('DOMContentLoaded', initApp);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}