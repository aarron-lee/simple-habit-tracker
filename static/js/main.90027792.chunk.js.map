{"version":3,"sources":["hooks/useForm.js","redux-modules/utils/createSliceWithRoutines.js","redux-modules/habits/habitsSlice.js","redux-modules/habits/hooks/useCreateHabit.js","redux-modules/session/selectors/sessionSliceSelector.js","redux-modules/session/selectors/isLoggedInSelector.js","hooks/useLoggedIn.js","ui/molecules/dialogs/CreateHabitDialog.tsx","hooks/useToggle.js","redux-modules/session/sessionSlice.js","redux-modules/session/hooks/useLogout.js","ui/atoms/themeProvider/ThemeProvider.js","redux-modules/habits/selectors/habitIdsSelectors.js","redux-modules/habits/hooks/useHabitIds.js","redux-modules/habits/selectors/habitsSliceSelector.js","redux-modules/habits/hooks/useHabits.js","hooks/useExportData.js","webpack:///./src/utils.js?025e","redux-modules/habits/selectors/selectIsArchiveRoute.js","ui/atoms/navigation/NavBar.js","redux-modules/session/hooks/useLogin.js","ui/pages/session/SignIn.tsx","redux-modules/session/hooks/useCreateUser.js","ui/pages/session/SignUp.tsx","ui/pages/ProfilePage.tsx","hooks/useAuthPersistence.js","ui/atoms/route/AuthRoute.js","ui/atoms/route/UnAuthRoute.js","ui/molecules/calendar/calculateWeeksInMonth.js","ui/molecules/calendar/Week.js","redux-modules/habits/selectors/habitSelector.js","redux-modules/habits/hooks/useHabit.js","ui/molecules/calendar/Calendar.js","ui/molecules/calendar/MonthNav.js","redux-modules/habits/hooks/useDeleteHabit.js","redux-modules/habits/hooks/useUpdateHabit.js","ui/molecules/dialogs/RenameHabitDialog.tsx","redux-modules/habits/hooks/useReorderHabit.js","ui/molecules/dialogs/ReorderHabitDialog.tsx","ui/molecules/dialogs/DeleteHabitDialog.tsx","ui/molecules/calendar/CalendarYear.tsx","ui/molecules/dialogs/HabitHistoryDialog.tsx","ui/molecules/dialogs/ArchiveHabitDialog.tsx","ui/molecules/habit/HabitOptions.tsx","redux-modules/habits/hooks/useSwapHabit.js","ui/molecules/habit/HabitDropZone.tsx","ui/molecules/habit/HabitNotes.tsx","ui/molecules/habit/Habit.tsx","redux-modules/session/hooks/useUpdateHabitView.js","redux-modules/session/selectors/habitViewTypeSelector.js","redux-modules/session/hooks/useHabitViewType.js","ui/molecules/habit/DayHabit.js","ui/molecules/habits/Habits.tsx","ui/pages/LandingPage.tsx","App.tsx","firebase/firebase.js","firebase/users/loginUser.js","redux-modules/session/sagas/loginSaga.js","firebase/users/createUser.js","redux-modules/session/sagas/createUserSaga.js","firebase/users/logoutUser.js","redux-modules/session/sagas/logoutSaga.js","redux-modules/session/selectors/currentUserIdSelector.js","redux-modules/session/sagas/subcribeToUserSettingsSaga.js","firebase/users/updateHabitViewType.js","redux-modules/session/sagas/updateHabitViewTypeSaga.js","redux-modules/session/sagas/sessionSagas.js","firebase/habits/createHabit.js","redux-modules/habits/sagas/createHabitSaga.js","firebase/habits/updateHabit.js","redux-modules/habits/sagas/updateHabitSaga.js","firebase/habits/updateHistory.js","redux-modules/habits/sagas/updateHistorySaga.js","redux-modules/habits/sagas/subcribeToHabitsSaga.js","firebase/habits/deleteHabit.js","redux-modules/habits/sagas/deleteHabitSaga.js","firebase/habits/swapHabitOrder.ts","redux-modules/habits/sagas/swapHabitOrderSaga.js","firebase/habits/reorderHabit.ts","redux-modules/habits/sagas/reorderHabitSaga.js","redux-modules/habits/sagas/habitSagas.js","redux-modules/rootSaga.js","redux-modules/store.js","serviceWorkerRegistration.ts","index.tsx"],"names":["SET","RESET","formReducer","state","action","type","field","payload","useForm","initialState","useReducer","dispatch","updateField","target","name","value","resetForm","formState","createSliceWithRoutines","reducers","routines","routineInfo","routineReducers","noop","extraReducers","otherArgs","Error","routineNames","Object","keys","reduce","createdRoutines","routineName","createRoutine","promisifiedRoutines","promisifiedRoutinesAcc","routine","promisifyRoutine","slice","createSlice","habitsSlice","updateHabit","habit","id","addHabit","deleteHabit","updateHistory","createHabit","fetchHabit","swapHabit","reorderHabit","SUCCESS","useCreateHabit","useDispatch","useCallback","habitName","trigger","sessionSliceSelector","session","isLoggedInSelector","createSelector","sessionSlice","Boolean","user","uid","useLoggedIn","useSelector","FormDialog","useState","open","setOpen","isLoggedIn","handleClickOpen","handleClose","Button","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","onChange","label","fullWidth","autoComplete","DialogActions","e","useToggle","defaultValue","toggle","setToggle","toggleValue","userSettings","habitIds","habitViewType","setCurrentUser","setUserSettings","login","logout","createUser","updateHabitViewType","useLogout","ThemeProvider","children","theme","React","useMemo","createMuiTheme","palette","habitIdsSelector","get","useHabitIds","habitsSliceSelector","habits","useHabits","useExportData","data","jsonStr","JSON","stringify","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","Date","toLocaleString","replace","click","revokeObjectURL","exportAllData","getCurrentDateComponents","now","year","getFullYear","month","getMonth","day","getDate","selectIsArchiveRoute","router","location","pathname","calendarStyles","css","padStart","linkStyles","NavBar","props","toggleState","isArchivePage","openMenuRef","useRef","exportData","useEffect","checkDateIntervalId","setInterval","currentDateInfo","window","reload","console","error","clearInterval","AppBar","color","position","Toolbar","style","display","flexDirection","justifyContent","alignItems","Typography","variant","noWrap","textDecoration","to","flexGrow","maxWidth","className","fontSize","IconButton","edge","aria-label","ref","aria-haspopup","Popper","anchorEl","current","transition","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","component","MuiLink","process","useLogin","loginInfo","formStyles","SignIn","onSubmit","event","preventDefault","stopPropagation","cx","email","placeholder","required","password","useCreateUser","userInfo","displayName","SignUp","ProfilePage","useAuthPersistence","firebase","auth","onAuthStateChanged","userAuth","actions","AuthRoute","path","UnAuthRoute","calculateWeeksInMonth","numDaysInMonth","getDaysInMonth","firstDayOfMonth","getDay","weekNumForToday","getWeekOfMonth","weeks","currentDay","week","length","i","push","dayContainerStyles","clickableStyles","dayStyles","darkThemeStyles","darkActiveStyles","Week","onDayClick","history","map","idx","habitSelector","habitId","useHabit","Calendar","monthNavContainerStyles","navStyles","Months","MonthNav","currentMonth","currentYear","getYear","showMonthNavButtons","setMonth","setYear","notesOpen","setNotesOpen","navigateBackwards","newMonth","navigateForwards","size","useDeleteHabit","useUpdateHabit","RenameHabitDialog","isOpen","setIsRenameOpen","useReorderHabit","newPosition","ReorderHabitDialog","setIsReorderOpen","habitsIds","currentPosition","indexOf","idxLabel","InputLabel","Select","habitPosition","archived","k","pos","disabled","DeleteHabitDialog","closeDialog","yearContainerStyles","monthContainerStyles","0","1","2","3","4","5","6","7","8","9","10","11","NoHistory","CalendarYear","yr","months","m","monthStr","HabitHistoryDialog","setIsHistoryOpen","years","undefined","fullScreen","ArchiveHabitDialog","setIsArchiveOpen","HabitOptions","iconButtonRef","setIsOpen","closeOptions","renameOpen","reorderOpen","historyOpen","deleteOpen","setIsDeleteOpen","archiveOpen","Menu","keepMounted","useSwapHabit","firstHabitId","secondHabitId","hoveringStyles","canDropStyles","HabitDropZone","useDrop","accept","canDrop","item","drop","monitor","droppedItemId","collect","isHovering","isOver","dropCollectedProps","buttonContainerStyles","preStyles","textAreaStyles","HabitNotes","notes","updateNotes","editNotes","setEditNotes","TextareaAutosize","cardStyles","fillerStyles","cardHeaderStyles","titleStyles","Habit","order","showArchivedOnly","useDrag","drag","preview","Card","useUpdateHabitViewType","info","habitViewTypeSelector","useHabitViewType","dayHabitStyles","inactiveStyles","activeStyles","DayHabit","isActive","HABIT_VIEW_TYPE","habitViewTypeButtonGroupStyle","habitContainerStyles","Habits","setViewType","viewType","useSetViewType","ButtonGroup","flipKey","join","flipId","LandingPage","appStyles","App","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","a","signInWithEmailAndPassword","loginUser","loginSaga","put","request","call","success","failure","fulfill","generateUserDocument","userRef","doc","exists","newUserInfo","set","createUserWithEmailAndPassword","updateProfile","createUserSaga","logoutUser","signOut","logoutSaga","currentUserIdSelector","listen","handleSubscribe","subscribeToUserSettingsSaga","subscriptionChannel","userId","eventChannel","emitter","onSnapshot","querySnapshot","select","currentUserId","channel","take","cancelled","close","fork","listenTask","cancel","takeLatest","userSettingsRef","collection","runTransaction","transaction","userSettingsDoc","update","updateHabitViewTypeSaga","sessionSagas","takeEvery","TRIGGER","options","habitRef","createHabitSaga","newHabit","newData","merge","updateHabitSaga","updatedHabitProperties","newValue","updateHistorySaga","currentValue","subscribeToHabitsSaga","where","docChanges","forEach","change","delete","newHabitIds","filter","deleteHabitSaga","includes","firstHabitIdx","secondHabitIdx","swapHabitOrder","swapHabitOrderSaga","move","arr","oldPosition","newArr","splice","elementToMove","targetPosition","Math","min","max","result","reorderHabitSaga","habitSagas","rootSaga","sagas","sessionsSaga","routinePromiseWatcherSaga","all","saga","spawn","allSagas","createStore","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","store","configureStore","reducer","connectRouter","preloadedState","run","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","createHashHistory","addEventListener","ReactDOM","render","StrictMode","HTML5toTouch","CssBaseline","getElementById","origin","fetch","headers","response","contentType","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.90027792.chunk.js","sourcesContent":["import { useReducer } from 'react';\n\nconst SET = 'SET';\nconst RESET = 'RESET';\n\nconst formReducer = (state, action) => {\n  if (action.type === SET) {\n    return { ...state, [action.field]: action.payload };\n  }\n  if (action.type === RESET) {\n    return {};\n  }\n};\n\nfunction useForm(initialState = {}) {\n  const [state, dispatch] = useReducer(formReducer, initialState);\n\n  const updateField = ({ target }) =>\n    dispatch({\n      type: SET,\n      field: target.name,\n      payload: target.value,\n    });\n  const resetForm = () =>\n    dispatch({\n      type: RESET,\n    });\n  return { formState: state, updateField, resetForm };\n}\n\nexport default useForm;\n","import noop from 'lodash/noop';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { createRoutine, promisifyRoutine } from 'redux-saga-routines';\n\nfunction createSliceWithRoutines({\n  name,\n  initialState = {},\n  reducers = {},\n  routines: routineInfo = {},\n  routineReducers = noop,\n  extraReducers = {},\n  ...otherArgs\n}) {\n  if (typeof routineReducers !== 'function') {\n    throw new Error('routineReducers must be a function that returns a reducerMap');\n  }\n  const routineNames = Object.keys(routineInfo);\n\n  const routines = routineNames.reduce((createdRoutines, routineName) => {\n    createdRoutines[routineName] = createRoutine(`${name}/${routineInfo[routineName]}`);\n    return createdRoutines;\n  }, {});\n\n  const promisifiedRoutines = routineNames.reduce((promisifiedRoutinesAcc, routineName) => {\n    const routine = routines[routineName];\n    promisifiedRoutinesAcc[routineName] = promisifyRoutine(routine);\n    return promisifiedRoutinesAcc;\n  }, {});\n  const slice = createSlice({\n    name,\n    reducers,\n    initialState,\n    extraReducers: {\n      ...extraReducers,\n      ...routineReducers(routines),\n    },\n    ...otherArgs,\n  });\n  slice.routines = routines;\n  slice.promisifiedRoutines = promisifiedRoutines;\n  return slice;\n}\nexport default createSliceWithRoutines;\n","import createSliceWithRoutines from \"redux-modules/utils/createSliceWithRoutines\";\n\nconst habitsSlice = createSliceWithRoutines({\n  name: \"habits\",\n  initialState: {},\n  reducers: {\n    updateHabit: (state, action) => {\n      const { habit, id } = action.payload;\n      state[id] = { ...state[id], ...habit };\n    },\n    addHabit: (state, action) => {\n      const { habit, id } = action.payload;\n      state[id] = habit;\n    },\n    deleteHabit: (state, action) => {\n      const { id } = action.payload;\n      delete state[id];\n    },\n  },\n  routines: {\n    updateHistory: \"UPDATE_HISTORY\",\n    createHabit: \"CREATE_HABIT\",\n    updateHabit: \"UPDATE_HABIT\",\n    deleteHabit: \"DELETE_HABIT\",\n    fetchHabit: \"FETCH_HABIT\",\n    swapHabit: \"SWAP_HABIT\",\n    reorderHabit: \"REORDER_HABIT\",\n  },\n  routineReducers: (routines) => ({\n    [routines.createHabit.SUCCESS]: (state, action) => {\n      const { habit, id } = action.payload;\n\n      state[id] = habit;\n    },\n  }),\n});\n\nexport default habitsSlice;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useCreateHabit() {\n  const dispatch = useDispatch();\n\n  const createUser = useCallback(\n    (formState) => {\n      const { habitName } = formState;\n      dispatch(routines.createHabit.trigger({ habitName }));\n    },\n    [dispatch]\n  );\n\n  return createUser;\n}\n\nexport default useCreateHabit;\n","const sessionSliceSelector = (state) => state?.session;\n\nexport default sessionSliceSelector;\n","import { createSelector } from '@reduxjs/toolkit';\nimport sessionSliceSelector from './sessionSliceSelector';\n\nconst isLoggedInSelector = createSelector(sessionSliceSelector, (sessionSlice) =>\n  Boolean(sessionSlice.user.uid)\n);\n\nexport default isLoggedInSelector;\n","import { useSelector } from 'react-redux';\nimport isLoggedInSelector from 'redux-modules/session/selectors/isLoggedInSelector';\n\nconst useLoggedIn = () => {\n  const isLoggedIn = useSelector(isLoggedInSelector);\n\n  return isLoggedIn;\n};\n\nexport default useLoggedIn;\n","import React, { useState, useCallback } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useForm from 'hooks/useForm';\nimport useCreateHabit from 'redux-modules/habits/hooks/useCreateHabit';\nimport useLoggedIn from 'hooks/useLoggedIn';\n\nexport default function FormDialog() {\n  const [open, setOpen] = useState(false);\n  const { formState, updateField, resetForm } = useForm();\n  const createHabit = useCreateHabit();\n  const isLoggedIn = useLoggedIn();\n\n  const handleClickOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  if (!isLoggedIn) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Create Habit</Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"create-habit-title\">\n        <DialogTitle id=\"create-habit-title\">Create Habit</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"habitName\"\n            name=\"habitName\"\n            value={formState.habitName || ''}\n            onChange={updateField}\n            label=\"Habit Name\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button\n            onClick={(e) => {\n              createHabit(formState);\n              resetForm();\n              handleClose();\n            }}\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useCallback, useState } from 'react';\n\nfunction useToggle(defaultValue = false) {\n  const [toggle, setToggle] = useState(defaultValue);\n\n  const toggleValue = useCallback(() => {\n    setToggle(!toggle);\n  }, [toggle]);\n\n  return [toggle, toggleValue, setToggle];\n}\n\nexport default useToggle;\n","import createSliceWithRoutines from 'redux-modules/utils/createSliceWithRoutines';\n\nconst sessionSlice = createSliceWithRoutines({\n  name: 'session',\n  initialState: {\n    user: {},\n    userSettings: {\n      habitIds: [],\n      habitViewType: 'week'\n    },\n  },\n  reducers: {\n    setCurrentUser: (state, action) => {\n      state.user = action.payload.user;\n    },\n    setUserSettings: (state, action) => {\n      state.userSettings = { ...state.userSettings, ...action.payload.userSettings };\n    },\n  },\n  routines: {\n    login: 'LOGIN',\n    logout: 'LOGOUT',\n    createUser: 'CREATE_USER',\n    updateHabitViewType: 'UPDATE_HABIT_VIEW_TYPE',\n  },\n  routineReducers: (routines) => ({\n    [routines.logout.SUCCESS]: (state) => {\n      state.user = {};\n    },\n    [routines.login.SUCCESS]: (state, action) => {\n      state.user = action.payload.user;\n    },\n    [routines.createUser.SUCCESS]: (state, action) => {\n      state.user = action.payload.user;\n    },\n    [routines.updateHabitViewType.SUCCESS]: (state, action) => {\n      state.userSettings.habitViewType = action.payload.habitViewType;\n    }\n  }),\n});\n\nexport default sessionSlice;\n","import sessionSlice from '../sessionSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = sessionSlice;\n\nfunction useLogout() {\n  const dispatch = useDispatch();\n\n  const logout = useCallback(() => {\n    dispatch(routines.logout.trigger());\n  }, [dispatch]);\n\n  return logout;\n}\n\nexport default useLogout;\n","import React from 'react';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider as MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst DEFAULT = 'dark'\n\nexport const useIsDarkTheme = () => {\n  return true;\n  // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  // return prefersDarkMode;\n};\n\nfunction ThemeProvider({ children }) {\n  // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: DEFAULT // prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    []\n    // [prefersDarkMode]\n  );\n\n  return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n}\n\nexport default ThemeProvider;\n","import get from 'lodash/get';\nimport sessionSliceSelector from 'redux-modules/session/selectors/sessionSliceSelector';\nimport { createSelector } from '@reduxjs/toolkit';\n\nconst habitIdsSelector = createSelector([sessionSliceSelector], (session) =>\n  get(session, 'userSettings.habitIds', [])\n);\n\nexport default habitIdsSelector;\n","import { useSelector } from 'react-redux';\nimport habitIdsSelector from '../selectors/habitIdsSelectors';\n\nconst useHabitIds = () => {\n  const habitIds = useSelector(habitIdsSelector);\n\n  return habitIds;\n};\n\nexport default useHabitIds;\n","function habitsSliceSelector(state) {\n  return state.habits;\n}\nexport default habitsSliceSelector;\n","import { useSelector } from \"react-redux\";\nimport habitsSliceSelector from \"../selectors/habitsSliceSelector\";\n\nconst useHabits = () => {\n  const habits = useSelector(habitsSliceSelector);\n\n  return habits;\n};\n\nexport default useHabits;\n","import useHabitIds from \"redux-modules/habits/hooks/useHabitIds\";\nimport useHabits from \"redux-modules/habits/hooks/useHabits\";\n\nfunction exportAllData(data) {\n  const jsonStr = JSON.stringify(data, null, 2);\n  const blob = new Blob([jsonStr], { type: \"application/json\" });\n  const url = URL.createObjectURL(blob);\n\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.download =\n    \"simple_habit_tracker_\" +\n    new Date().toLocaleString().replace(/\\W/g, \"_\") +\n    \".json\";\n  link.click();\n\n  URL.revokeObjectURL(url);\n}\n\nconst useExportData = () => {\n  const habitIds = useHabitIds();\n  const habits = useHabits();\n\n  const exportData = () => {\n    exportAllData({ habitIds, habits });\n  };\n\n  return exportData;\n};\n\nexport default useExportData;\n","export function getCurrentDateComponents() {\n  const now = new Date();\n  const year = now.getFullYear();\n\n  const month = now.getMonth();\n  const day = now.getDate();\n\n  return { year, month, day };\n}\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst routerPathSelector = (state) => state?.router?.location?.pathname || \"\";\n\nconst selectIsArchiveRoute = createSelector(\n  [routerPathSelector],\n  (pathname) => pathname === \"/archive\",\n);\n\nexport default selectIsArchiveRoute;\n","import React, { useEffect, useRef } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\nimport CreateHabitDialog from \"ui/molecules/dialogs/CreateHabitDialog\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n// import EventNoteIcon from '@material-ui/icons/EventNote';\nimport Grow from \"@material-ui/core/Grow\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// import Drawer from 'ui/molecules/drawer/Drawer';\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport MuiLink from \"@material-ui/core/Link\";\nimport MenuList from \"@material-ui/core/MenuList\";\n// import NotesIcon from '@material-ui/icons/Notes';\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport useToggle from \"hooks/useToggle\";\nimport useLogout from \"redux-modules/session/hooks/useLogout\";\nimport useLoggedIn from \"hooks/useLoggedIn\";\nimport { Link } from \"react-router-dom\";\nimport { useIsDarkTheme } from \"../themeProvider/ThemeProvider\";\nimport { css } from \"emotion\";\nimport { getDate } from \"date-fns\";\nimport useExportData from \"hooks/useExportData\";\nimport { getCurrentDateComponents } from \"utils\";\nimport { useSelector } from \"react-redux\";\nimport selectIsArchiveRoute from \"redux-modules/habits/selectors/selectIsArchiveRoute\";\n\nconst currentDay = () => {\n  return `${getDate(Date.now())}`.padStart(2, \"0\");\n};\n\nconst calendarStyles = css`\n  position: relative;\n  ::after {\n    content: \"${currentDay()}\";\n    position: absolute;\n    left: 10px;\n    top: 10px;\n  }\n`;\n\nconst linkStyles = css`\n  a {\n    color: inherit;\n    text-decoration: none;\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nconst useMonitorDateChangeEffect = () => {\n  useEffect(() => {\n    const { day } = getCurrentDateComponents();\n\n    const checkDateIntervalId = setInterval(() => {\n      try {\n        const currentDateInfo = getCurrentDateComponents();\n\n        if (day !== currentDateInfo.day) {\n          // refresh page\n          window.location.reload();\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }, 10000);\n\n    return () => {\n      clearInterval(checkDateIntervalId);\n    };\n  }, []);\n};\n\nconst NavBar = (props) => {\n  const [toggle, toggleState] = useToggle();\n  const isArchivePage = useSelector(selectIsArchiveRoute);\n  const openMenuRef = useRef();\n\n  const isLoggedIn = useLoggedIn();\n  const logout = useLogout();\n  const exportData = useExportData();\n\n  const isDarkTheme = useIsDarkTheme();\n\n  useMonitorDateChangeEffect();\n\n  return (\n    <AppBar color={isDarkTheme ? \"inherit\" : \"primary\"} position=\"sticky\">\n      <Toolbar\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {/* TODO: notes tab */}\n        {/* <Drawer>\n          <Link style={{ color: 'inherit', textDecoration: 'none' }} to=\"/\">\n            <Drawer.ListItem text=\"Habits\" icon={EventNoteIcon} />\n          </Link>\n          <Link style={{ color: 'inherit', textDecoration: 'none' }} to=\"/notes\">\n            <Drawer.ListItem text=\"Notes\" icon={NotesIcon} />\n          </Link>\n        </Drawer> */}\n        <Typography variant=\"h6\" noWrap>\n          <Link style={{ color: \"inherit\", textDecoration: \"none\" }} to=\"/\">\n            Habit Tracker\n          </Link>\n        </Typography>\n        <div\n          style={{\n            flexGrow: 1,\n            maxWidth: \"960px\",\n          }}\n        />\n        {!isArchivePage && (\n          <>\n            <CreateHabitDialog />\n            <div className={calendarStyles}>\n              <CalendarTodayIcon fontSize=\"large\" />\n            </div>\n          </>\n        )}\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          ref={openMenuRef}\n          onClick={toggleState}\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <Popper open={toggle} anchorEl={openMenuRef.current} transition>\n          {({ TransitionProps, placement }) => {\n            return (\n              <Grow\n                {...TransitionProps}\n                style={{\n                  transformOrigin:\n                    placement === \"bottom\" ? \"center top\" : \"center bottom\",\n                }}\n              >\n                <Paper>\n                  <ClickAwayListener onClickAway={toggleState}>\n                    <>\n                      {!isLoggedIn && (\n                        <MenuList\n                          autoFocusItem={toggle}\n                          id=\"menu-list-grow\"\n                          onKeyDown={toggleState}\n                          className={linkStyles}\n                        >\n                          <MenuItem onClick={toggleState}>\n                            <Link component={MuiLink} to=\"/signin\">\n                              Login\n                            </Link>\n                          </MenuItem>\n                          {process.env.NODE_ENV !== \"production\" && (\n                            <MenuItem onClick={toggleState}>\n                              <Link component={MuiLink} to=\"/signup\">\n                                Sign Up\n                              </Link>\n                            </MenuItem>\n                          )}\n                        </MenuList>\n                      )}\n                      {isLoggedIn && (\n                        <MenuList\n                          autoFocusItem={toggle}\n                          id=\"menu-list-grow\"\n                          onKeyDown={toggleState}\n                          className={linkStyles}\n                        >\n                          {/* <MenuItem onClick={toggleState}>\n                            <Link component={MuiLink} to=\"/profile\">\n                              Profile\n                            </Link>\n                          </MenuItem>\n                          <MenuItem onClick={toggleState}>My account</MenuItem> */}\n                          {isArchivePage ? (\n                            <MenuItem onClick={toggleState}>\n                              <Link to=\"/\">Home</Link>\n                            </MenuItem>\n                          ) : (\n                            <MenuItem onClick={toggleState}>\n                              <Link to=\"/archive\">Archive</Link>\n                            </MenuItem>\n                          )}\n                          <MenuItem\n                            onClick={() => {\n                              exportData();\n                              toggleState();\n                            }}\n                          >\n                            Export Data\n                          </MenuItem>\n                          <MenuItem\n                            onClick={() => {\n                              logout();\n                              toggleState();\n                            }}\n                          >\n                            Logout\n                          </MenuItem>\n                        </MenuList>\n                      )}\n                    </>\n                  </ClickAwayListener>\n                </Paper>\n              </Grow>\n            );\n          }}\n        </Popper>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import sessionSlice from '../sessionSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = sessionSlice;\n\nfunction useLogin() {\n  const dispatch = useDispatch();\n\n  const login = useCallback(\n    (loginInfo) => {\n      dispatch(routines.login.trigger(loginInfo));\n    },\n    [dispatch]\n  );\n\n  return login;\n}\n\nexport default useLogin;\n","import React, { useCallback, SyntheticEvent, FunctionComponent } from 'react';\nimport useForm from 'hooks/useForm';\nimport { Link } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport { css, cx } from 'emotion';\nimport useLogin from 'redux-modules/session/hooks/useLogin';\n\nconst formStyles = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  > * {\n    margin: 5px;\n  }\n`;\n\ntype SignInProps = {\n  className?: string | undefined;\n};\n\nconst SignIn: FunctionComponent<SignInProps> = ({ className }) => {\n  const { formState, updateField } = useForm();\n  const login = useLogin();\n\n  const onSubmit = useCallback(\n    (event: SyntheticEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      login(formState);\n    },\n    [formState, login]\n  );\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className={cx(formStyles, className)}>\n        Sign In\n        <TextField\n          type=\"email\"\n          label=\"Email Address\"\n          value={formState.email || ''}\n          name=\"email\"\n          placeholder=\"Email Address\"\n          onChange={updateField}\n        />\n        <TextField\n          type=\"password\"\n          label=\"Password\"\n          required\n          name=\"password\"\n          value={formState.password || ''}\n          placeholder=\"Your Password\"\n          onChange={updateField}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Sign in\n        </Button>\n        <Link to=\"/signup\">Sign up here</Link>\n        <Link to=\"/passwordreset\">Forgot Password?</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import sessionSlice from '../sessionSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = sessionSlice;\n\nfunction useCreateUser() {\n  const dispatch = useDispatch();\n\n  const createUser = useCallback(\n    (userInfo) => {\n      const { displayName, email, password } = userInfo;\n      dispatch(routines.createUser.trigger({ displayName, email, password }));\n    },\n    [dispatch]\n  );\n\n  return createUser;\n}\n\nexport default useCreateUser;\n","import React, { useCallback, SyntheticEvent, FunctionComponent } from 'react';\nimport useForm from 'hooks/useForm';\nimport { Link } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport { css, cx } from 'emotion';\nimport useCreateUser from 'redux-modules/session/hooks/useCreateUser';\nconst formStyles = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  > * {\n    margin: 10px;\n  }\n`;\n\ntype SignUpProps = {\n  className?: string | undefined;\n};\n\nconst SignUp: FunctionComponent<SignUpProps> = ({ className }) => {\n  const { formState, updateField } = useForm();\n\n  const createUser = useCreateUser();\n\n  const onSubmit = useCallback(\n    (event: SyntheticEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      createUser(formState);\n    },\n    [createUser, formState]\n  );\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className={cx(formStyles, className)}>\n        Sign Up\n        <TextField\n          type=\"text\"\n          label=\"Display Name\"\n          value={formState.displayName || ''}\n          name=\"displayName\"\n          placeholder=\"Display Name\"\n          onChange={updateField}\n          required\n        />\n        <TextField\n          type=\"email\"\n          label=\"Email Address\"\n          value={formState.email || ''}\n          name=\"email\"\n          placeholder=\"Email Address\"\n          onChange={updateField}\n          required\n        />\n        <TextField\n          type=\"password\"\n          label=\"Password\"\n          required\n          name=\"password\"\n          value={formState.password || ''}\n          placeholder=\"Your Password\"\n          onChange={updateField}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Sign Up\n        </Button>\n        <Link to=\"/signin\">Sign in here</Link>\n        <Link to=\"/passwordreset\">Forgot Password?</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from 'react';\n\nfunction ProfilePage() {\n  return <div></div>;\n}\n\nexport default ProfilePage;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\n\nfunction useAuthPersistence() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((userAuth) => {\n      dispatch(sessionSlice.actions.setCurrentUser({ user: userAuth || {} }));\n    });\n  }, [dispatch]);\n}\n\nexport default useAuthPersistence;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport useLoggedIn from 'hooks/useLoggedIn';\n\nfunction AuthRoute({ path, children }) {\n  const isLoggedIn = useLoggedIn();\n\n  if (!isLoggedIn) {\n    return <Redirect to={'/'} />;\n  }\n\n  return <Route path={path}>{children}</Route>;\n}\n\nexport default AuthRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport useLoggedIn from 'hooks/useLoggedIn';\n\nfunction UnAuthRoute({ path, children }) {\n  const isLoggedIn = useLoggedIn();\n\n  if (isLoggedIn) {\n    return <Redirect to={'/'} />;\n  }\n\n  return <Route path={path}>{children}</Route>;\n}\n\nexport default UnAuthRoute;\n","import { getDay, getDaysInMonth, getWeekOfMonth } from 'date-fns';\n\nconst SATURDAY = 6;\n\nfunction calculateWeeksInMonth({ month, year }) {\n  // month is 0-indexed\n  const numDaysInMonth = getDaysInMonth(new Date(year, month));\n  // 0 Sun, 1 Mon, etc.\n  const firstDayOfMonth = getDay(new Date(year, month, 1));\n\n  const weekNumForToday = getWeekOfMonth(new Date()) - 1\n\n  const weeks = [];\n  let currentDay = 1;\n\n  while (currentDay <= numDaysInMonth) {\n    const week = [];\n\n    if (weeks.length === 0) {\n      // build first week\n      for (let i = 0; i <= SATURDAY; i++) {\n        if (i < firstDayOfMonth) {\n          week.push(-1);\n        } else {\n          week.push(currentDay);\n          currentDay++;\n        }\n      }\n    } else {\n      for (let i = 0; i <= SATURDAY; i++) {\n        if (currentDay <= numDaysInMonth) {\n          week.push(currentDay);\n        } else {\n          week.push(-1);\n        }\n        currentDay++;\n      }\n    }\n    weeks.push(week);\n  }\n\n  return [weeks, weekNumForToday];\n}\n\nexport default calculateWeeksInMonth;\n","import React from 'react';\nimport noop from 'lodash/noop';\nimport { css, cx } from 'emotion';\nimport { useIsDarkTheme } from 'ui/atoms/themeProvider/ThemeProvider';\n\nconst dayContainerStyles = css`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst clickableStyles = css`\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(180, 180, 180);\n  }\n`;\n\nconst dayStyles = css`\n  height: 30px;\n  width: 30px;\n  border-radius: 5px;\n  background-color: rgb(220, 220, 220);\n  margin: 5px;\n`;\n\nconst activeStyles = css`\n  background-color: rgb(51, 192, 255);\n  &:hover {\n    background-color: rgb(51, 192, 255, 0.5);\n  }\n`;\n\nconst darkThemeStyles = css`\n  background-color: #282d33;\n  color: white;\n`;\n\nconst darkActiveStyles = css`\n  background-color: gray;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nfunction Week({ week = [], onDayClick, history }) {\n  const isDarkTheme = useIsDarkTheme();\n\n  return (\n    <div className={cx(dayContainerStyles)}>\n      {week.map((day, idx) => {\n        const onClick = day > 0 ? () => onDayClick && onDayClick(day) : noop;\n\n        const className = cx(\n          dayStyles,\n          isDarkTheme && darkThemeStyles,\n          day > 0 && clickableStyles,\n          history[day] && !isDarkTheme && activeStyles,\n          history[day] && isDarkTheme && darkActiveStyles\n        );\n        return (\n          <div key={`${day}-${idx}`} className={className} onClick={onClick}>\n            {day > 0 ? day : ''}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Week;\n","import { createSelector } from '@reduxjs/toolkit';\nimport habitsSliceSelector from './habitsSliceSelector';\n\nconst habitSelector = (habitId) =>\n  createSelector([habitsSliceSelector], (habits) => habits[habitId]);\n\nexport default habitSelector;\n","import { useSelector } from 'react-redux';\nimport habitSelector from '../selectors/habitSelector';\n\nconst useHabit = (habitId) => {\n  const habit = useSelector(habitSelector(habitId));\n\n  return habit;\n};\n\nexport default useHabit;\n","import React, { useMemo, useCallback } from \"react\";\nimport get from \"lodash/get\";\nimport habitsSlice from \"redux-modules/habits/habitsSlice\";\nimport calculateWeeksInMonth from \"./calculateWeeksInMonth\";\nimport Week from \"./Week\";\nimport { useDispatch } from \"react-redux\";\nimport useHabit from \"redux-modules/habits/hooks/useHabit\";\n\nfunction Calendar({ month, year, habitId, habitViewType }) {\n  const [weeks, weekNumForToday] = useMemo(\n    () => calculateWeeksInMonth({ month, year }),\n    [month, year],\n  );\n  const dispatch = useDispatch();\n\n  const onDayClick = useCallback(\n    (day) => {\n      dispatch(\n        habitsSlice.routines.updateHistory.trigger({\n          day,\n          month,\n          year,\n          habitId,\n        }),\n      );\n    },\n    [dispatch, habitId, month, year],\n  );\n\n  const { history = {} } = useHabit(habitId);\n\n  if (habitViewType === \"week\") {\n    const week = weeks[weekNumForToday];\n    // console.log(week)\n    return (\n      <div>\n        <Week\n          week={week}\n          key={weekNumForToday}\n          onDayClick={onDayClick}\n          history={get(history, [year, month], {})}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {weeks.map((week, idx) => {\n        return (\n          <Week\n            week={week}\n            key={idx}\n            onDayClick={onDayClick}\n            history={get(history, [year, month], {})}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Calendar;\n","import React, { useCallback, useState } from 'react';\nimport { getMonth, getYear } from 'date-fns';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForwardIos';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { css } from 'emotion';\n\nconst monthNavContainerStyles = css`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst navStyles = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst Months = [\n  { name: 'January' },\n  { name: 'February' },\n  { name: 'March' },\n  { name: 'April' },\n  { name: 'May' },\n  { name: 'June' },\n  { name: 'July' },\n  { name: 'August' },\n  { name: 'September' },\n  { name: 'October' },\n  { name: 'November' },\n  { name: 'December' },\n];\n\nfunction MonthNav({\n  children,\n  currentMonth = getMonth(Date.now()),\n  currentYear = getYear(Date.now()),\n  showMonthNavButtons = true\n}) {\n  const [month, setMonth] = useState(currentMonth);\n  const [year, setYear] = useState(currentYear);\n  const [notesOpen, setNotesOpen] = useState(false);\n\n  const toggleNotes = () => {\n    setNotesOpen(!notesOpen)\n  }\n\n  const navigateBackwards = useCallback(() => {\n    let newMonth = month - 1;\n    if (newMonth < 0) {\n      newMonth = 11;\n      let newYear = year - 1;\n      setYear(newYear);\n    }\n    setMonth(newMonth);\n  }, [month, year]);\n\n  const navigateForwards = useCallback(() => {\n    let newMonth = month + 1;\n    if (newMonth > 11) {\n      newMonth = 0;\n      let newYear = year + 1;\n      setYear(newYear);\n    }\n    setMonth(newMonth);\n  }, [month, year]);\n\n  return (\n    <div className={monthNavContainerStyles}>\n      <div className={navStyles}>\n        <div className={navStyles}>\n          {showMonthNavButtons &&\n            <>\n              <IconButton size=\"small\" onClick={navigateBackwards}>\n                <ArrowBackIcon />\n              </IconButton>\n              <IconButton size=\"small\" onClick={navigateForwards}>\n                <ArrowForwardIcon />\n              </IconButton>\n            </>\n          }\n          <Typography variant=\"h6\" noWrap>\n            {Months[month].name} {year}\n          </Typography>\n        </div>\n        <IconButton size=\"small\" onClick={toggleNotes}>\n          {notesOpen ?\n            <KeyboardArrowUpIcon /> :\n            <KeyboardArrowDownIcon />\n          }\n        </IconButton>\n      </div>\n      <div>{children({ month, year, notesOpen })}</div>\n    </div>\n  );\n}\n\nexport default MonthNav;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useDeleteHabit(habitId) {\n  const dispatch = useDispatch();\n\n  const deleteHabit = useCallback(() => {\n    dispatch(routines.deleteHabit.trigger({ habitId }));\n  }, [dispatch, habitId]);\n\n  return deleteHabit;\n}\n\nexport default useDeleteHabit;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useUpdateHabit() {\n  const dispatch = useDispatch();\n\n  const updateHabit = useCallback(\n    ({ id, habit }) => {\n      dispatch(routines.updateHabit.trigger({ id, habit }));\n    },\n    [dispatch]\n  );\n\n  return updateHabit;\n}\n\nexport default useUpdateHabit;\n","import React, { FunctionComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport useForm from 'hooks/useForm';\nimport useHabit from 'redux-modules/habits/hooks/useHabit';\nimport useUpdateHabit from 'redux-modules/habits/hooks/useUpdateHabit';\n\ntype RenameHabitDialogProps = {\n  habitId: string;\n  isOpen: boolean;\n  setIsRenameOpen: Function;\n};\n\nconst RenameHabitDialog: FunctionComponent<RenameHabitDialogProps> = ({\n  habitId,\n  isOpen,\n  setIsRenameOpen,\n}) => {\n  const habit: { name: string; history: object | undefined } = useHabit(habitId);\n  const { formState, updateField, resetForm } = useForm();\n  const updateHabit = useUpdateHabit();\n  return (\n    <Dialog open={isOpen} onClose={() => setIsRenameOpen(false)} aria-labelledby=\"update-dialog\">\n      <DialogTitle id=\"update-dialog\">Update Habit Name - {habit.name}</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"habitName\"\n          name=\"habitName\"\n          value={formState.habitName || ''}\n          onChange={updateField}\n          label=\"Habit Name\"\n          type=\"text\"\n          fullWidth\n          autoComplete=\"off\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setIsRenameOpen(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={(e) => {\n            updateHabit({ id: habitId, habit: { name: formState.habitName } });\n            resetForm();\n            setIsRenameOpen(false);\n          }}\n          color=\"primary\"\n        >\n          Update Name\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default RenameHabitDialog;\n","import habitsSlice from \"../habitsSlice\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nconst { routines } = habitsSlice;\n\nfunction useReorderHabit() {\n  const dispatch = useDispatch();\n\n  const reorderHabit = useCallback(\n    ({ habitId, newPosition }) => {\n      dispatch(routines.reorderHabit.trigger({ habitId, newPosition }));\n    },\n    [dispatch],\n  );\n\n  return reorderHabit;\n}\n\nexport default useReorderHabit;\n","import React, { FunctionComponent } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useForm from \"hooks/useForm\";\nimport useReorderHabit from \"redux-modules/habits/hooks/useReorderHabit\";\nimport useHabitIds from \"redux-modules/habits/hooks/useHabitIds\";\nimport { InputLabel, Select } from \"@material-ui/core\";\nimport useHabits from \"redux-modules/habits/hooks/useHabits\";\nimport { useSelector } from \"react-redux\";\nimport selectIsArchiveRoute from \"redux-modules/habits/selectors/selectIsArchiveRoute\";\n\ntype ReorderHabitDialogProps = {\n  habitId: string;\n  isOpen: boolean;\n  setIsReorderOpen: Function;\n};\n\nconst ReorderHabitDialog: FunctionComponent<ReorderHabitDialogProps> = ({\n  habitId,\n  isOpen,\n  setIsReorderOpen,\n}) => {\n  const habits = useHabits();\n  const isArchivePage = useSelector(selectIsArchiveRoute);\n  const habit = habits[habitId];\n  // habitIds has the correct order, don't use order based on useHabits()\n  const habitsIds = useHabitIds();\n  const { formState, updateField, resetForm } = useForm();\n  const reorderHabit = useReorderHabit();\n\n  const currentPosition = habitsIds.indexOf(habitId) + 1;\n\n  // if there are any archived habits, the dropdown will skip position numbers\n  // so track the label separately from the actual idx\n  let idxLabel = 0;\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={() => setIsReorderOpen(false)}\n      aria-labelledby=\"update-dialog\"\n    >\n      <DialogTitle id=\"update-dialog\">Update Order - {habit.name}</DialogTitle>\n      <DialogContent>\n        <InputLabel>Current Position: {currentPosition}</InputLabel>\n        <Select\n          id=\"habitPosition\"\n          name=\"habitPosition\"\n          value={formState.habitPosition || currentPosition}\n          onChange={updateField}\n          fullWidth\n        >\n          {habitsIds.map((id: string, idx: number) => {\n            const habit = habits[id];\n            if (isArchivePage && habit?.archived === false) {\n              return null;\n            }\n\n            if (!isArchivePage && habit?.archived === true) {\n              return null;\n            }\n\n            const k = `select-${habitId}-menu-item-${id}`;\n            const pos = idx + 1;\n            return (\n              <MenuItem key={k} value={pos} id={k}>\n                Position {idxLabel++}: {habits[id]?.name}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setIsReorderOpen(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={(e) => {\n            const newPosition = formState.habitPosition - 1;\n            if (newPosition >= 0 && newPosition !== currentPosition - 1) {\n              reorderHabit({ habitId, newPosition });\n            }\n            resetForm();\n            setIsReorderOpen(false);\n          }}\n          color=\"primary\"\n          disabled={\n            !formState.habitPosition ||\n            formState.habitPosition === currentPosition\n          }\n        >\n          Update Position\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ReorderHabitDialog;\n","import React, { FunctionComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\ntype DeleteHabitDialogProps = {\n  isOpen: boolean;\n  deleteHabit: Function;\n  closeDialog: Function;\n};\n\nconst DeleteHabitDialog: FunctionComponent<DeleteHabitDialogProps> = ({\n  isOpen,\n  deleteHabit,\n  closeDialog,\n}) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={() => {\n        closeDialog();\n      }}\n      aria-labelledby=\"update-dialog\"\n    >\n      <DialogTitle id=\"update-dialog\">Delete Habit</DialogTitle>\n      <DialogContent>Are you sure you want to delete this habit?</DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            closeDialog();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={(e) => {\n            deleteHabit();\n            closeDialog();\n          }}\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteHabitDialog;\n","import { Typography } from \"@material-ui/core\";\nimport React, { FunctionComponent } from \"react\";\nimport useHabit from \"redux-modules/habits/hooks/useHabit\";\n\nimport Calendar from \"ui/molecules/calendar/Calendar\";\nimport { css } from \"emotion\";\n\nconst yearContainerStyles = css`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  max-width: 1000px;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n`;\n\nconst monthContainerStyles = css`\n  margin: auto;\n  min-height: 320px;\n`;\n\ntype mType = {\n  [key: string]: string;\n};\n\nconst Months: mType = {\n  0: \"January\",\n  1: \"February\",\n  2: \"March\",\n  3: \"April\",\n  4: \"May\",\n  5: \"June\",\n  6: \"July\",\n  7: \"August\",\n  8: \"September\",\n  9: \"October\",\n  10: \"November\",\n  11: \"December\",\n};\n\ntype CalendarYearProps = {\n  year: number;\n  habitId: string;\n};\n\nconst NoHistory: FunctionComponent = () => (\n  <Typography variant=\"h6\">No History</Typography>\n);\n\nconst CalendarYear: FunctionComponent<CalendarYearProps> = ({\n  year,\n  habitId,\n}) => {\n  const habit = useHabit(habitId);\n\n  const { history } = habit;\n\n  if (!history) {\n    return <NoHistory />;\n  }\n\n  const yr = history[year];\n\n  if (!yr) {\n    return <NoHistory />;\n  }\n\n  const months = Object.keys(yr) as string[];\n\n  if (!months || months.length === 0) {\n    return <NoHistory />;\n  }\n\n  return (\n    <div className={yearContainerStyles}>\n      {months.map((m) => {\n        const monthStr = Months[m];\n        return (\n          <div key={`${habitId}-${m}-${year}`} className={monthContainerStyles}>\n            <Typography variant=\"h6\">{monthStr}</Typography>\n            <Calendar\n              month={m}\n              year={year}\n              habitId={habitId}\n              habitViewType=\"month\"\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CalendarYear;\n","import React, { FunctionComponent } from \"react\";\nimport CalendarYear from \"ui/molecules/calendar/CalendarYear\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useForm from \"hooks/useForm\";\nimport { Select, Typography } from \"@material-ui/core\";\nimport useHabit from \"redux-modules/habits/hooks/useHabit\";\nimport { getYear } from \"date-fns\";\n\ntype HabitHistoryDialogProps = {\n  habitId: string;\n  isOpen: boolean;\n  setIsHistoryOpen: Function;\n};\n\nconst HabitHistoryDialog: FunctionComponent<HabitHistoryDialogProps> = ({\n  habitId,\n  isOpen,\n  setIsHistoryOpen,\n}) => {\n  const habit = useHabit(habitId);\n  const { history } = habit;\n  const { formState, updateField } = useForm();\n\n  let years = undefined;\n\n  if (history) {\n    years = Object.keys(history);\n  }\n\n  const currentYear = getYear(Date.now());\n\n  return (\n    <Dialog\n      open={isOpen}\n      fullScreen\n      onClose={() => setIsHistoryOpen(false)}\n      aria-labelledby=\"update-dialog\"\n    >\n      <DialogTitle id=\"update-dialog\">Habit History - {habit.name}</DialogTitle>\n      <DialogContent>\n        {(!years || !history) && (\n          <Typography variant=\"h6\">No History</Typography>\n        )}\n        {years && (\n          <>\n            <Select\n              id=\"year\"\n              name=\"year\"\n              value={formState.year || currentYear}\n              onChange={updateField}\n              fullWidth\n            >\n              {years.map((year: string, idx: number) => {\n                const k = `select-${habitId}-menu-item-${year}`;\n                return (\n                  <MenuItem key={k} value={year} id={k}>\n                    {year}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n            <CalendarYear\n              year={formState.year || currentYear}\n              habitId={habitId}\n            />\n          </>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={() => setIsHistoryOpen(false)} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default HabitHistoryDialog;\n","import React, { FunctionComponent } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useHabit from \"redux-modules/habits/hooks/useHabit\";\nimport useUpdateHabit from \"redux-modules/habits/hooks/useUpdateHabit\";\n\ntype ArchiveHabitDialogProps = {\n  habitId: string;\n  isOpen: boolean;\n  setIsArchiveOpen: Function;\n};\n\nconst ArchiveHabitDialog: FunctionComponent<ArchiveHabitDialogProps> = ({\n  habitId,\n  isOpen,\n  setIsArchiveOpen,\n}) => {\n  const habit: { name: string; archived: boolean } = useHabit(habitId);\n  const updateHabit = useUpdateHabit();\n\n  const label = habit.archived ? \"Unarchive\" : \"Archive\";\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={() => setIsArchiveOpen(false)}\n      aria-labelledby=\"update-dialog\"\n    >\n      <DialogTitle id=\"update-dialog\">\n        {label} Habit - {habit.name}\n      </DialogTitle>\n      <DialogContent></DialogContent>\n      <DialogActions>\n        <Button onClick={() => setIsArchiveOpen(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={(e) => {\n            updateHabit({ id: habitId, habit: { archived: !habit.archived } });\n            setIsArchiveOpen(false);\n          }}\n          color=\"primary\"\n        >\n          {label}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ArchiveHabitDialog;\n","import React, {\n  FunctionComponent,\n  useState,\n  useRef,\n  MutableRefObject,\n} from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport useDeleteHabit from \"redux-modules/habits/hooks/useDeleteHabit\";\nimport useHabit from \"redux-modules/habits/hooks/useHabit\";\nimport RenameHabitDialog from \"../dialogs/RenameHabitDialog\";\nimport ReorderHabitDialog from \"../dialogs/ReorderHabitDialog\";\nimport DeleteHabitDialog from \"../dialogs/DeleteHabitDialog\";\nimport HabitHistoryDialog from \"../dialogs/HabitHistoryDialog\";\nimport ArchiveHabitDialog from \"../dialogs/ArchiveHabitDialog\";\n\ntype HabitOptionProps = {\n  habitId: string;\n};\n\nconst HabitOptions: FunctionComponent<HabitOptionProps> = ({ habitId }) => {\n  const habit: { name: string; history: object | undefined } =\n    useHabit(habitId);\n\n  const iconButtonRef = useRef() as MutableRefObject<HTMLButtonElement>;\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const openOptions = () => setIsOpen(true);\n  const closeOptions = () => setIsOpen(false);\n\n  const [renameOpen, setIsRenameOpen] = useState(false);\n  const [reorderOpen, setIsReorderOpen] = useState(false);\n  const [historyOpen, setIsHistoryOpen] = useState(false);\n  const [deleteOpen, setIsDeleteOpen] = useState(false);\n  const [archiveOpen, setIsArchiveOpen] = useState(false);\n\n  const deleteHabit = useDeleteHabit(habitId);\n\n  if (!habit) {\n    return null;\n  }\n  return (\n    <>\n      <IconButton\n        ref={iconButtonRef}\n        edge=\"end\"\n        aria-label=\"options for habit\"\n        onClick={openOptions}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={iconButtonRef.current}\n        keepMounted\n        open={isOpen}\n        onClose={closeOptions}\n      >\n        <MenuItem\n          onClick={() => {\n            setIsRenameOpen(true);\n            closeOptions();\n          }}\n        >\n          Rename\n        </MenuItem>{\" \"}\n        <MenuItem\n          onClick={() => {\n            setIsReorderOpen(true);\n            closeOptions();\n          }}\n        >\n          Reorder\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setIsHistoryOpen(true);\n            closeOptions();\n          }}\n        >\n          History\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setIsArchiveOpen(true);\n            closeOptions();\n          }}\n        >\n          Archive\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setIsDeleteOpen(true);\n            closeOptions();\n          }}\n        >\n          Delete\n        </MenuItem>\n      </Menu>\n      <RenameHabitDialog\n        isOpen={renameOpen}\n        habitId={habitId}\n        setIsRenameOpen={setIsRenameOpen}\n      />\n      <ReorderHabitDialog\n        isOpen={reorderOpen}\n        habitId={habitId}\n        setIsReorderOpen={setIsReorderOpen}\n      />\n      <HabitHistoryDialog\n        isOpen={historyOpen}\n        habitId={habitId}\n        setIsHistoryOpen={setIsHistoryOpen}\n      />\n      <DeleteHabitDialog\n        isOpen={deleteOpen}\n        deleteHabit={deleteHabit}\n        closeDialog={() => setIsDeleteOpen(false)}\n      />\n      <ArchiveHabitDialog\n        isOpen={archiveOpen}\n        habitId={habitId}\n        setIsArchiveOpen={setIsArchiveOpen}\n      />\n    </>\n  );\n};\n\nexport default HabitOptions;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useSwapHabit() {\n  const dispatch = useDispatch();\n\n  const swapHabit = useCallback(\n    ({ firstHabitId, secondHabitId }) => {\n      dispatch(routines.swapHabit.trigger({ firstHabitId, secondHabitId }));\n    },\n    [dispatch]\n  );\n\n  return swapHabit;\n}\n\nexport default useSwapHabit;\n","import React, { FunctionComponent } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { HabitDragItem } from './Habit';\nimport { css, cx } from 'emotion';\nimport useSwapHabit from 'redux-modules/habits/hooks/useSwapHabit';\n\nconst hoveringStyles = css`\n  opacity: 0.8;\n`;\n\nconst canDropStyles = css`\n  opacity: 0.5;\n`;\n\ntype Props = {\n  habitId: string;\n};\n\nconst HabitDropZone: FunctionComponent<Props> = (props) => {\n  const { habitId } = props;\n  const swapHabit = useSwapHabit();\n  const [dropCollectedProps, drop] = useDrop({\n    accept: 'habit',\n    canDrop: (item: HabitDragItem) => {\n      return item.type === 'habit' && item.id !== habitId;\n    },\n    drop: (item: HabitDragItem, monitor) => {\n      const { id: droppedItemId, type: droppedItemType } = item;\n      if (droppedItemType === 'habit') {\n        // habit dropped, dispatch action to reorder habits\n        swapHabit({ firstHabitId: droppedItemId, secondHabitId: habitId });\n      }\n    },\n    collect: (monitor) => ({\n      canDrop: monitor.canDrop(),\n      isHovering: monitor.isOver(),\n    }),\n  });\n\n  return (\n    <div\n      ref={drop}\n      className={cx({\n        [canDropStyles]: dropCollectedProps.canDrop,\n        [hoveringStyles]: dropCollectedProps.isHovering && dropCollectedProps.canDrop,\n      })}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default HabitDropZone;\n","import React, { FunctionComponent, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport useForm from 'hooks/useForm';\nimport { css } from 'emotion';\n\nconst formStyles: string = css`\n  display: flex;\n  flex-direction: column;\n`\nconst buttonContainerStyles: string = css`\n  display: flex;\n  flex-direction: row;\n`\nconst preStyles: string = css`\n  padding: 0.75rem;\n  border-radius: 0.5rem;\n  border: 1px solid black;\n`\n\nconst textAreaStyles = css`\n  padding: 0.75rem;\n  border-radius: 0.5rem;\n  border: 1px solid black;\n  outline: none;\n`\n\ntype Props = {\n  notes: string;\n  notesOpen: boolean;\n  updateNotes?: (notes: string) => any;\n}\n\nconst HabitNotes: FunctionComponent<Props> = ({ notes, notesOpen, updateNotes }) => {\n  const [editNotes, setEditNotes] = useState(false)\n  const { formState, updateField, resetForm } = useForm();\n\n  const toggleEditNotes = () => {\n    setEditNotes(!editNotes)\n  }\n\n  if (!notesOpen) {\n    return null;\n  }\n\n  if (!editNotes) {\n    return <pre className={preStyles} onClick={toggleEditNotes}>{notes.length ? notes : 'No Notes'}</pre>\n  }\n  return (\n    <div className={formStyles}>\n      <TextareaAutosize\n        className={textAreaStyles}\n        autoFocus\n        id=\"notes\"\n        name=\"notes\"\n        value={formState.notes ?? notes ?? ''}\n        onChange={updateField}\n        autoComplete=\"off\"\n      />\n      <div className={buttonContainerStyles}>\n        <Button onClick={() => setEditNotes(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={(e) => {\n            updateNotes && updateNotes(formState.notes)\n            resetForm();\n            setEditNotes(false);\n          }}\n          color=\"primary\"\n        >Update</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default HabitNotes;","import React, { FunctionComponent } from \"react\";\nimport Calendar from \"ui/molecules/calendar/Calendar\";\nimport Card from \"@material-ui/core/Card\";\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MonthNav from \"ui/molecules/calendar/MonthNav\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useHabit from \"redux-modules/habits/hooks/useHabit\";\nimport { css } from \"emotion\";\nimport { useDrag } from \"react-dnd\";\nimport HabitOptions from \"./HabitOptions\";\nimport HabitDropZone from \"./HabitDropZone\";\nimport HabitNotes from \"./HabitNotes\";\nimport useUpdateHabit from \"redux-modules/habits/hooks/useUpdateHabit\";\nimport { useSelector } from \"react-redux\";\nimport selectIsArchiveRoute from \"redux-modules/habits/selectors/selectIsArchiveRoute\";\n\nconst cardStyles: string = css`\n  margin: 8px;\n  padding: 16px;\n  text-transform: capitalize;\n  position: relative;\n`;\n\nconst fillerStyles: string = css`\n  flex-grow: 1;\n`;\n\nconst cardHeaderStyles: string = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst titleStyles: string = css`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 18ch;\n`;\n\ntype HabitProps = {\n  habitId: string;\n  order: number;\n  habitViewType: \"day\" | \"week\" | \"month\";\n};\n\nexport type HabitDragItem = {\n  type: string;\n  id: string;\n  order: number;\n};\n\ntype HabitType = {\n  name: string;\n  history: object | undefined;\n  notes: string | undefined;\n  archived: boolean;\n};\n\nconst Habit: FunctionComponent<HabitProps> = ({\n  habitId,\n  order,\n  habitViewType,\n}) => {\n  const habit: HabitType = useHabit(habitId);\n\n  const showArchivedOnly = useSelector(selectIsArchiveRoute);\n\n  const [, drag, preview] = useDrag({\n    item: { id: habitId, type: \"habit\", order },\n  });\n\n  const updateHabit = useUpdateHabit();\n\n  const updateNotes = (notes: string) => {\n    updateHabit({ id: habitId, habit: { notes } });\n  };\n\n  if (!habit) {\n    return null;\n  }\n\n  if (showArchivedOnly && habit.archived === false) {\n    return null;\n  }\n\n  if (!showArchivedOnly && habit.archived === true) {\n    return null;\n  }\n\n  const { name, notes } = habit;\n  return (\n    <HabitDropZone habitId={habitId}>\n      <Card className={cardStyles} ref={preview}>\n        <div className={cardHeaderStyles}>\n          <IconButton\n            ref={drag}\n            edge=\"start\"\n            aria-label=\"drag drop indicator for reordering habits\"\n          >\n            <DragIndicatorIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={titleStyles}>\n            {name}\n          </Typography>\n          <div className={fillerStyles} />\n          <HabitOptions habitId={habitId} />\n        </div>\n        <MonthNav showMonthNavButtons={habitViewType === \"month\"}>\n          {({\n            month,\n            year,\n            notesOpen,\n          }: {\n            month: number;\n            year: number;\n            notesOpen: boolean;\n          }) => (\n            <>\n              <HabitNotes\n                notes={notes ?? \"\"}\n                notesOpen={notesOpen}\n                updateNotes={updateNotes}\n              />\n              <Calendar\n                month={month}\n                year={year}\n                habitId={habitId}\n                habitViewType={habitViewType}\n              />\n            </>\n          )}\n        </MonthNav>\n      </Card>\n    </HabitDropZone>\n  );\n};\n\nexport default Habit;\n","import sessionSlice from '../sessionSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = sessionSlice;\n\nfunction useUpdateHabitViewType() {\n  const dispatch = useDispatch();\n\n  const updateHabitViewType = useCallback(\n    (info) => {\n      const { habitViewType } = info;\n      dispatch(routines.updateHabitViewType.trigger({ habitViewType }));\n    },\n    [dispatch]\n  );\n\n  return updateHabitViewType;\n}\n\nexport default useUpdateHabitViewType;\n\n","import { createSelector } from '@reduxjs/toolkit';\nimport get from 'lodash/get';\nimport sessionSliceSelector from './sessionSliceSelector';\n\nconst habitViewTypeSelector = createSelector(sessionSliceSelector, (session) => {\n  return get(session, 'userSettings.habitViewType', 'week');\n});\n\nexport default habitViewTypeSelector;\n","import { useSelector } from 'react-redux';\nimport habitViewTypeSelector from '../selectors/habitViewTypeSelector';\n\nconst useHabitViewType = () => {\n  const habit = useSelector(habitViewTypeSelector);\n\n  return habit;\n};\n\nexport default useHabitViewType;\n","import React, { useCallback } from \"react\";\nimport useHabit from \"redux-modules/habits/hooks/useHabit\";\nimport { css, cx } from \"emotion\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport habitsSlice from \"redux-modules/habits/habitsSlice\";\nimport { get } from \"lodash\";\nimport selectIsArchiveRoute from \"redux-modules/habits/selectors/selectIsArchiveRoute\";\n\nconst size = 110;\n\nconst dayHabitStyles = css`\n  width: ${size}px;\n  height: ${size}px;\n  border-radius: 50%;\n  text-transform: capitalize;\n  margin: 0.8rem;\n  font-size: 1rem;\n  white-space: normal;\n`;\n\nconst inactiveStyles = css`\n  border: 5px solid lightblue;\n`;\n\nconst activeStyles = css`\n  border: 5px solid green;\n`;\n\nconst DayHabit = ({ habitId, year, month, day }) => {\n  const habit = useHabit(habitId);\n  const showArchivedOnly = useSelector(selectIsArchiveRoute);\n\n  const dispatch = useDispatch();\n\n  const onDayClick = useCallback(() => {\n    dispatch(\n      habitsSlice.routines.updateHistory.trigger({\n        day,\n        month,\n        year,\n        habitId,\n      }),\n    );\n  }, [dispatch, habitId, month, year, day]);\n\n  if (!habit) {\n    return null;\n  }\n\n  if (showArchivedOnly && habit.archived === false) {\n    return null;\n  }\n\n  if (!showArchivedOnly && habit.archived === true) {\n    return null;\n  }\n\n  const { name, history } = habit;\n  const isActive = get(history, [year, month, day], false);\n\n  return (\n    <button\n      className={cx(\n        dayHabitStyles,\n        isActive && activeStyles,\n        !isActive && inactiveStyles,\n      )}\n      type=\"button\"\n      onClick={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        onDayClick();\n      }}\n    >\n      {name}\n    </button>\n  );\n};\n\nexport default DayHabit;\n","import React, { FunctionComponent } from \"react\";\nimport useHabitIds from \"redux-modules/habits/hooks/useHabitIds\";\nimport Habit from \"../habit/Habit\";\nimport { css } from \"emotion\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\nimport useUpdateHabitViewType from \"redux-modules/session/hooks/useUpdateHabitView\";\nimport useHabitViewType from \"redux-modules/session/hooks/useHabitViewType\";\nimport DayHabit from \"../habit/DayHabit\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport { getCurrentDateComponents } from \"utils\";\n\nconst HABIT_VIEW_TYPE = {\n  day: \"day\",\n  week: \"week\",\n  month: \"month\",\n};\n\nconst habitViewTypeButtonGroupStyle = css`\n  margin: 1rem;\n`;\n\nconst habitContainerStyles = css`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  max-width: 1000px;\n  align-items: center;\n  @media only screen and (max-width: 1000px) {\n    justify-content: center;\n  }\n`;\n\nconst useSetViewType = () => {\n  const updateHabitViewType = useUpdateHabitViewType();\n\n  return (viewType: string) => {\n    if (\n      viewType === HABIT_VIEW_TYPE.month ||\n      viewType === HABIT_VIEW_TYPE.day ||\n      viewType === HABIT_VIEW_TYPE.week\n    ) {\n      return updateHabitViewType({ habitViewType: viewType });\n    }\n  };\n};\n\nconst Habits: FunctionComponent = () => {\n  const habitIds = useHabitIds();\n  const habitViewType = useHabitViewType();\n\n  const setViewType = useSetViewType();\n\n  const { year, month, day } = getCurrentDateComponents();\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        size=\"large\"\n        className={habitViewTypeButtonGroupStyle}\n      >\n        <Button onClick={() => setViewType(HABIT_VIEW_TYPE.day)}>Today</Button>\n        <Button onClick={() => setViewType(HABIT_VIEW_TYPE.week)}>Week</Button>\n        <Button onClick={() => setViewType(HABIT_VIEW_TYPE.month)}>\n          Month\n        </Button>\n      </ButtonGroup>\n      {habitIds.length > 0 && (\n        <Flipper flipKey={habitIds.join(\"\")}>\n          <div className={habitContainerStyles}>\n            {habitIds.map((habitId: string, idx: number) => {\n              if (habitViewType === \"day\") {\n                return (\n                  <Flipped key={habitId} flipId={habitId}>\n                    {/* <Flipped/> needs a div child */}\n                    <div>\n                      <DayHabit\n                        habitId={habitId}\n                        year={year}\n                        month={month}\n                        day={day}\n                      />\n                    </div>\n                  </Flipped>\n                );\n              }\n\n              return (\n                <Flipped key={habitId} flipId={habitId}>\n                  {/* <Flipped/> needs a div child */}\n                  <div>\n                    <Habit\n                      habitId={habitId}\n                      order={idx}\n                      habitViewType={habitViewType}\n                    />\n                  </div>\n                </Flipped>\n              );\n            })}\n          </div>\n        </Flipper>\n      )}\n    </>\n  );\n};\n\nexport default Habits;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nfunction LandingPage() {\n  return (\n    <div>\n      <Typography variant=\"h1\">Habit Tracker</Typography>\n      <Typography variant=\"h4\">A Simple Habit Tracker App</Typography>\n      <Typography variant=\"h5\">Login To Begin</Typography>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport NavBar from \"ui/atoms/navigation/NavBar\";\nimport SignIn from \"ui/pages/session/SignIn\";\nimport SignUp from \"ui/pages/session/SignUp\";\nimport ProfilePage from \"ui/pages/ProfilePage\";\nimport useAuthPersistence from \"hooks/useAuthPersistence\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport AuthRoute from \"ui/atoms/route/AuthRoute\";\nimport UnAuthRoute from \"ui/atoms/route/UnAuthRoute\";\nimport { css } from \"emotion\";\nimport useLoggedIn from \"hooks/useLoggedIn\";\nimport Habits from \"ui/molecules/habits/Habits\";\nimport LandingPage from \"ui/pages/LandingPage\";\n\nconst appStyles = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction App() {\n  useAuthPersistence();\n  const isLoggedIn = useLoggedIn();\n  return (\n    <>\n      <NavBar />\n      <div>\n        <Switch>\n          <UnAuthRoute path=\"/signin\">\n            <SignIn />\n          </UnAuthRoute>\n          <UnAuthRoute path=\"/signup\">\n            <SignUp />\n          </UnAuthRoute>\n          <UnAuthRoute path=\"/passwordreset\">\n            <div>WIP</div>\n          </UnAuthRoute>\n          <AuthRoute path=\"/profile\">\n            <ProfilePage />\n          </AuthRoute>\n          <AuthRoute path=\"/notes\">\n            <ProfilePage />\n          </AuthRoute>\n          <Switch>\n            <Route path=\"/archive\">\n              <div className={appStyles}>\n                {isLoggedIn ? <Habits /> : <LandingPage />}\n              </div>\n            </Route>\n            <Route path=\"/\">\n              <div className={appStyles}>\n                {isLoggedIn ? <Habits /> : <LandingPage />}\n              </div>\n            </Route>\n          </Switch>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","import { auth } from '../firebase';\n\nasync function loginUser({ email, password }) {\n  return await auth.signInWithEmailAndPassword(email, password);\n}\n\nexport default loginUser;\n","import { put, call } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport loginUser from 'firebase/users/loginUser';\nimport { push } from 'connected-react-router';\n\nfunction* loginSaga(action) {\n  const { email, password } = action.payload;\n  try {\n    yield put(sessionSlice.routines.login.request());\n\n    const { user } = yield call(loginUser, { email, password });\n\n    yield put(\n      sessionSlice.routines.login.success({\n        user,\n      })\n    );\n    yield put(push('/'));\n  } catch (e) {\n    console.error(e);\n    yield put(sessionSlice.routines.login.failure(e));\n  } finally {\n    yield put(sessionSlice.routines.login.fulfill());\n  }\n}\n\nexport default loginSaga;\n","import { firestore, auth } from '../firebase';\n\nasync function generateUserDocument(user) {\n  if (!user) throw new Error('User does not exist');\n\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const newUserInfo = {\n      habitIds: [],\n    };\n\n    await userRef.set(newUserInfo);\n\n    return newUserInfo;\n  }\n}\n\nasync function createUser({ email, password, displayName }) {\n  const { user } = await auth.createUserWithEmailAndPassword(email, password);\n\n  user.updateProfile({\n    displayName,\n  });\n\n  generateUserDocument(user);\n\n  return user;\n}\n\nexport default createUser;\n","import { put, call } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport createUser from 'firebase/users/createUser';\nimport { push } from 'connected-react-router';\n\nfunction* createUserSaga(action) {\n  const { displayName, email, password } = action.payload;\n\n  try {\n    yield put(sessionSlice.routines.createUser.request());\n\n    const user = yield call(createUser, { email, password, displayName });\n\n    yield put(\n      sessionSlice.routines.createUser.success({\n        user,\n      })\n    );\n\n    yield put(push('/'));\n  } catch (e) {\n    console.error(e);\n    yield put(sessionSlice.routines.createUser.failure(e));\n  } finally {\n    yield put(sessionSlice.routines.createUser.fulfill());\n  }\n}\n\nexport default createUserSaga;\n","import { auth } from '../firebase';\n\nfunction logoutUser() {\n  return auth.signOut();\n}\n\nexport default logoutUser;\n","import { put, call } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport logoutUser from 'firebase/users/logoutUser';\n\nfunction* logoutSaga() {\n  try {\n    yield put(sessionSlice.routines.logout.request());\n\n    yield call(logoutUser);\n    yield put(sessionSlice.routines.logout.success());\n  } catch (e) {\n    console.error(e);\n    yield put(sessionSlice.routines.logout.failure(e));\n  } finally {\n    yield put(sessionSlice.routines.logout.fulfill());\n  }\n}\n\nexport default logoutSaga;\n","import { createSelector } from '@reduxjs/toolkit';\nimport get from 'lodash/get';\nimport sessionSliceSelector from './sessionSliceSelector';\n\nconst currentUserIdSelector = createSelector(sessionSliceSelector, (session) => {\n  return get(session, 'user.uid', undefined);\n});\n\nexport default currentUserIdSelector;\n","import { call, cancel, cancelled, fork, put, select, take, takeLatest } from 'redux-saga/effects';\nimport { eventChannel } from 'redux-saga';\nimport { firestore } from '../../../firebase/firebase';\nimport currentUserIdSelector from '../selectors/currentUserIdSelector';\nimport sessionSlice from '../sessionSlice';\n\nfunction subscriptionChannel({ userId }) {\n  return eventChannel((emitter) => {\n    const userSettingsRef = firestore.doc(`users/${userId}`);\n\n    const unsubscribe = userSettingsRef.onSnapshot((querySnapshot) => {\n      emitter({\n        data: querySnapshot.data(),\n        userId,\n      });\n    });\n\n    return unsubscribe;\n  });\n}\n\nexport function* listen() {\n  const currentUserId = yield select(currentUserIdSelector);\n\n  const channel = yield call(subscriptionChannel, { userId: currentUserId });\n\n  try {\n    while (true) {\n      const { data } = yield take(channel);\n\n      yield put(sessionSlice.actions.setUserSettings({ userSettings: data }));\n    }\n  } finally {\n    if (yield cancelled()) channel.close();\n  }\n}\n\nexport function* handleSubscribe(action) {\n  const listenTask = yield fork(listen, action);\n\n  const unsubscribed = yield take(sessionSlice.routines.logout.SUCCESS);\n\n  if (unsubscribed.type === sessionSlice.routines.logout.SUCCESS) {\n    yield cancel(listenTask);\n  }\n}\n\nexport function* subscribeToUserSettingsSaga() {\n  yield takeLatest(\n    [\n      sessionSlice.actions.setCurrentUser,\n      sessionSlice.routines.login.SUCCESS,\n      sessionSlice.routines.createUser.SUCCESS,\n    ],\n    handleSubscribe\n  );\n}\n","import { firestore } from '../firebase';\n\nasync function updateHabitViewType({ userId, habitViewType }) {\n  const userSettingsRef = firestore.collection('users').doc(userId);\n\n  await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    transaction.update(userSettingsRef, { habitIds: userSettings.habitIds, habitViewType });\n  });\n\n  return userId\n}\n\nexport default updateHabitViewType;\n","import { put, call, select } from 'redux-saga/effects';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport updateHabitViewType from 'firebase/users/updateHabitViewType';\n\nfunction* updateHabitViewTypeSaga(action) {\n  const { habitViewType } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(sessionSlice.routines.updateHabitViewType.request());\n\n    const userId = yield call(updateHabitViewType, { userId: currentUserId, habitViewType });\n\n    yield put(\n      sessionSlice.routines.updateHabitViewType.success({\n        userId, habitViewType\n      })\n    );\n\n  } catch (e) {\n    console.error(e);\n    yield put(sessionSlice.routines.updateHabitViewType.failure(e));\n  } finally {\n    yield put(sessionSlice.routines.updateHabitViewType.fulfill());\n  }\n}\n\nexport default updateHabitViewTypeSaga;\n","import { fork, takeEvery } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport loginSaga from './loginSaga';\nimport createUserSaga from './createUserSaga';\nimport logoutSaga from './logoutSaga';\nimport { subscribeToUserSettingsSaga } from './subcribeToUserSettingsSaga';\nimport updateHabitViewTypeSaga from './updateHabitViewTypeSaga';\n\nfunction* sessionSagas() {\n  yield takeEvery(sessionSlice.routines.login.TRIGGER, loginSaga);\n  yield takeEvery(sessionSlice.routines.logout.TRIGGER, logoutSaga);\n  yield takeEvery(sessionSlice.routines.createUser.TRIGGER, createUserSaga);\n  yield takeEvery(sessionSlice.routines.updateHabitViewType.TRIGGER, updateHabitViewTypeSaga);\n  yield fork(subscribeToUserSettingsSaga);\n}\n\nexport default sessionSagas;\n","import { firestore } from '../firebase';\n\nasync function createHabit({ userId, habitName, options = {} }) {\n  const userSettingsRef = firestore.collection('users').doc(userId);\n\n  const habitRef = firestore.collection('habits').doc();\n  const habitId = habitRef.id;\n\n  await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    transaction.set(habitRef, { name: habitName, userId, archived: false, ...options });\n\n    transaction.update(userSettingsRef, { ...userSettings, habitIds: [...userSettings.habitIds, habitId] });\n  });\n\n  return [habitId, (await firestore.collection('habits').doc(habitId).get()).data()];\n}\n\nexport default createHabit;\n","import { call, put, select } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\nimport createHabit from 'firebase/habits/createHabit';\n\nfunction* createHabitSaga(action) {\n  const { habitName, options = {} } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(habitsSlice.routines.createHabit.request());\n    const [habitId, newHabit] = yield call(createHabit, {\n      userId: currentUserId,\n      habitName,\n      options,\n    });\n\n    yield put(habitsSlice.routines.createHabit.success({ habit: newHabit, id: habitId }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.createHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.createHabit.fulfill());\n  }\n}\n\nexport default createHabitSaga;\n","import { firestore } from '../firebase';\n\nasync function updateHabit({ id, habit }) {\n  const habitRef = firestore.collection('habits').doc(id);\n\n  const newData = {\n    ...habit,\n  };\n\n  return await habitRef.set(newData, { merge: true });\n}\n\nexport default updateHabit;\n","import { call, put } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport updateHabit from 'firebase/habits/updateHabit';\n\nfunction* updateHabitSaga(action) {\n  const { id, habit } = action.payload;\n\n  try {\n    yield put(habitsSlice.routines.updateHabit.request());\n    yield call(updateHabit, {\n      id,\n      habit,\n    });\n\n    yield put(habitsSlice.routines.updateHabit.success({ id, updatedHabitProperties: habit }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.updateHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.updateHabit.fulfill());\n  }\n}\n\nexport default updateHabitSaga;\n","import { firestore } from '../firebase';\n\nasync function updateHistory({ year, month, day, habitId, newValue }) {\n  const habitRef = firestore.collection('habits').doc(habitId);\n\n  const newData = {\n    history: {\n      [year]: {\n        [month]: {\n          [day]: newValue,\n        },\n      },\n    },\n  };\n\n  return await habitRef.set(newData, { merge: true });\n}\n\nexport default updateHistory;\n","import { call, put, select } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport updateHistory from 'firebase/habits/updateHistory';\nimport habitSelector from '../selectors/habitSelector';\n\nfunction* updateHistorySaga(action) {\n  const { day, month, year, habitId } = action.payload;\n\n  try {\n    yield put(habitsSlice.routines.updateHistory.request());\n    const habit = yield select(habitSelector(habitId));\n\n    const { history = {} } = habit;\n\n    const currentValue = get(history, [year, month, day], false);\n\n    yield call(updateHistory, { year, month, day, habitId, newValue: !currentValue });\n\n    yield put(habitsSlice.routines.updateHistory.success());\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.updateHistory.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.updateHistory.fulfill());\n  }\n}\n\nexport default updateHistorySaga;\n","import {\n  call,\n  cancel,\n  cancelled,\n  fork,\n  put,\n  select,\n  take,\n  takeLatest,\n} from \"redux-saga/effects\";\nimport { eventChannel } from \"redux-saga\";\nimport { firestore } from \"../../../firebase/firebase\";\nimport habitsSlice from \"../habitsSlice\";\nimport sessionSlice from \"redux-modules/session/sessionSlice\";\nimport currentUserIdSelector from \"redux-modules/session/selectors/currentUserIdSelector\";\n\nfunction subscriptionChannel({ userId }) {\n  return eventChannel((emitter) => {\n    const habitsRef = firestore\n      .collection(\"habits\")\n      .where(\"userId\", \"==\", userId);\n    // .where('archived', '==', false);\n\n    const unsubscribe = habitsRef.onSnapshot((querySnapshot) => {\n      querySnapshot.docChanges().forEach((change) => {\n        emitter({\n          type: change.type,\n          data: change.doc.data(),\n          id: change.doc.id,\n        });\n      });\n    });\n\n    return unsubscribe;\n  });\n}\n\nexport function* listen(action) {\n  const currentUserId = yield select(currentUserIdSelector);\n\n  const channel = yield call(subscriptionChannel, { userId: currentUserId });\n\n  try {\n    while (true) {\n      const { data: habit, id, type } = yield take(channel);\n\n      switch (type) {\n        case \"added\": {\n          yield put(habitsSlice.actions.addHabit({ habit, id }));\n          break;\n        }\n        case \"modified\": {\n          yield put(habitsSlice.actions.updateHabit({ habit, id }));\n          break;\n        }\n        case \"removed\": {\n          yield put(habitsSlice.actions.deleteHabit({ habit, id }));\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  } finally {\n    if (yield cancelled()) channel.close();\n  }\n}\n\nexport function* handleSubscribe(action) {\n  const listenTask = yield fork(listen, action);\n  const unsubscribed = yield take(sessionSlice.routines.logout.SUCCESS);\n\n  if (unsubscribed.type === sessionSlice.routines.logout.SUCCESS) {\n    yield cancel(listenTask);\n  }\n}\n\nfunction* subscribeToHabitsSaga() {\n  yield takeLatest(\n    [\n      sessionSlice.actions.setCurrentUser,\n      sessionSlice.routines.login.SUCCESS,\n      sessionSlice.routines.createUser.SUCCESS,\n    ],\n    handleSubscribe,\n  );\n}\n\nexport default subscribeToHabitsSaga;\n","import { firestore } from '../firebase';\n\nasync function deleteHabit({ userId, habitId }) {\n  const userSettingsRef = firestore.collection('users').doc(userId);\n  const habitRef = firestore.collection('habits').doc(habitId);\n\n  return await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    transaction.delete(habitRef);\n\n    const newHabitIds = userSettings.habitIds.filter((id) => id !== habitId);\n\n    transaction.update(userSettingsRef, { habitIds: newHabitIds });\n  });\n}\n\nexport default deleteHabit;\n","import { call, put, select } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\nimport deleteHabit from 'firebase/habits/deleteHabit';\n\nfunction* deleteHabitSaga(action) {\n  const { habitId } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(habitsSlice.routines.deleteHabit.request());\n\n    yield call(deleteHabit, {\n      userId: currentUserId,\n      habitId,\n    });\n\n    yield put(habitsSlice.routines.deleteHabit.success({ id: habitId }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.deleteHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.deleteHabit.fulfill());\n  }\n}\n\nexport default deleteHabitSaga;\n","import { firestore } from '../firebase';\n\nasync function swapHabitOrder({\n  userId,\n  firstHabitId,\n  secondHabitId,\n}: {\n  userId: string;\n  firstHabitId: string;\n  secondHabitId: string;\n}) {\n  const userSettingsRef = firestore.collection('users').doc(userId);\n\n  return await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    if (\n      !userSettings ||\n      !userSettings.habitIds.includes(firstHabitId) ||\n      !userSettings.habitIds.includes(secondHabitId)\n    ) {\n      throw new Error('habit does not exist, cannot move the habit');\n    }\n\n    const newHabitIds = [...userSettings.habitIds];\n    const firstHabitIdx = newHabitIds.indexOf(firstHabitId);\n    const secondHabitIdx = newHabitIds.indexOf(secondHabitId);\n\n    // swap IDs in arr\n    newHabitIds[firstHabitIdx] = secondHabitId;\n    newHabitIds[secondHabitIdx] = firstHabitId;\n\n    await transaction.update(userSettingsRef, { habitIds: newHabitIds });\n\n    return newHabitIds;\n  });\n}\n\nexport default swapHabitOrder;\n","import { call, put, select } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\nimport swapHabitOrder from 'firebase/habits/swapHabitOrder';\n\nfunction* swapHabitOrderSaga(action) {\n  const { firstHabitId, secondHabitId } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(habitsSlice.routines.swapHabit.request());\n    const habitIds = yield call(swapHabitOrder, {\n      userId: currentUserId,\n      firstHabitId,\n      secondHabitId,\n    });\n\n    yield put(habitsSlice.routines.swapHabit.success({ habitIds }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.swapHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.swapHabit.fulfill());\n  }\n}\n\nexport default swapHabitOrderSaga;\n","import { firestore } from \"../firebase\";\n\nfunction move(arr: string[], id: string, newPosition: number) {\n  const oldPosition = arr.indexOf(id);\n\n  if (oldPosition === -1) {\n    console.error(`Error: Element with ID \"${id}\" not found in the array.`);\n    return null;\n  }\n\n  if (oldPosition === newPosition) {\n    return [...arr];\n  }\n\n  const newArr = [...arr];\n  const [elementToMove] = newArr.splice(oldPosition, 1);\n  const targetPosition = Math.min(Math.max(0, newPosition), newArr.length);\n\n  newArr.splice(targetPosition, 0, elementToMove);\n  return newArr;\n}\n\nasync function reorderHabit({\n  userId,\n  habitId,\n  newPosition,\n}: {\n  userId: string;\n  habitId: string;\n  newPosition: number;\n}) {\n  const userSettingsRef = firestore.collection(\"users\").doc(userId);\n\n  return await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    if (!userSettings || !userSettings.habitIds.includes(habitId)) {\n      throw new Error(\"habit does not exist, cannot move the habit\");\n    }\n\n    const newHabitIds = [...userSettings.habitIds];\n\n    if (!newHabitIds[newPosition]) {\n      throw new Error(\"habit position does not exist, cannot move the habit\");\n    }\n\n    const result = move(newHabitIds, habitId, newPosition);\n\n    await transaction.update(userSettingsRef, { habitIds: result });\n\n    return newHabitIds;\n  });\n}\n\nexport default reorderHabit;\n","import { call, put, select } from \"redux-saga/effects\";\nimport habitsSlice from \"redux-modules/habits/habitsSlice\";\nimport currentUserIdSelector from \"redux-modules/session/selectors/currentUserIdSelector\";\nimport reorderHabit from \"firebase/habits/reorderHabit\";\n\nfunction* reorderHabitSaga(action) {\n  const { habitId, newPosition } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(habitsSlice.routines.reorderHabit.request());\n    const habitIds = yield call(reorderHabit, {\n      userId: currentUserId,\n      habitId,\n      newPosition,\n    });\n\n    yield put(habitsSlice.routines.reorderHabit.success({ habitIds }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.reorderHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.reorderHabit.fulfill());\n  }\n}\n\nexport default reorderHabitSaga;\n","import { takeEvery, fork } from \"redux-saga/effects\";\nimport habitsSlice from \"redux-modules/habits/habitsSlice\";\nimport createHabitSaga from \"./createHabitSaga\";\nimport updateHabitSaga from \"./updateHabitSaga\";\nimport updateHistorySaga from \"./updateHistorySaga\";\nimport subscribeToHabitsSaga from \"./subcribeToHabitsSaga\";\nimport deleteHabitSaga from \"./deleteHabitSaga\";\nimport swapHabitOrderSaga from \"./swapHabitOrderSaga\";\nimport reorderHabitSaga from \"./reorderHabitSaga\";\n\nfunction* habitSagas() {\n  yield takeEvery(habitsSlice.routines.createHabit.TRIGGER, createHabitSaga);\n  yield takeEvery(habitsSlice.routines.updateHabit.TRIGGER, updateHabitSaga);\n  yield takeEvery(\n    habitsSlice.routines.updateHistory.TRIGGER,\n    updateHistorySaga,\n  );\n  yield takeEvery(habitsSlice.routines.deleteHabit.TRIGGER, deleteHabitSaga);\n  yield takeEvery(habitsSlice.routines.swapHabit.TRIGGER, swapHabitOrderSaga);\n  yield takeEvery(habitsSlice.routines.reorderHabit.TRIGGER, reorderHabitSaga);\n  yield fork(subscribeToHabitsSaga);\n}\n\nexport default habitSagas;\n","import { all, call, spawn } from 'redux-saga/effects';\nimport sessionsSaga from './session/sagas/sessionSagas';\nimport habitSagas from './habits/sagas/habitSagas';\nimport { routinePromiseWatcherSaga } from 'redux-saga-routines';\n\nfunction* rootSaga() {\n  const sagas = [sessionsSaga, habitSagas, routinePromiseWatcherSaga];\n\n  yield all(\n    sagas.map((saga) =>\n      spawn(function* allSagas() {\n        while (true) {\n          try {\n            yield call(saga);\n            break;\n          } catch (e) {\n            console.error(e);\n          }\n        }\n      })\n    )\n  );\n}\n\nexport default rootSaga;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './rootSaga';\nimport sessionSlice from './session/sessionSlice';\nimport habitsSlice from './habits/habitsSlice';\n\nconst createStore = ({ initialState = {}, history }) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware, routerMiddleware(history)];\n\n  const store = configureStore({\n    reducer: {\n      session: sessionSlice.reducer,\n      habits: habitsSlice.reducer,\n      router: connectRouter(history),\n    },\n    middleware,\n    preloadedState: initialState,\n  });\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default createStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport createStore from 'redux-modules/store';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch';\nimport ThemeProvider from 'ui/atoms/themeProvider/ThemeProvider';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { createHashHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { DndProvider } from 'react-dnd-multi-backend';\nimport { Provider } from 'react-redux';\n\nconst history = createHashHistory();\n\nfunction initApp() {\n  const store = createStore({ history });\n  return ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <DndProvider options={HTML5toTouch}>\n          <ConnectedRouter history={history}>\n            <ThemeProvider>\n              <CssBaseline />\n              <App />\n            </ThemeProvider>\n          </ConnectedRouter>\n        </DndProvider>\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ndocument.addEventListener('DOMContentLoaded', initApp);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}